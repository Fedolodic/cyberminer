{"ast":null,"code":"var _jsxFileName = \"/Users/Fedolodic/WebstormProjects/cyberminer/src/pages/HomePage.js\";\nimport React from 'react';\nimport { Grid, Form, Container, Icon, Button, Segment, Input } from 'semantic-ui-react';\nimport axios from 'axios'; // HomePage Component\n\nexport default class HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      string_To_Shift: '',\n      cyclicallyShifted: [],\n      alphabeticallyShifted: []\n    };\n\n    this.onChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value; // This is equal to \"this.setState(inputText : value});\"\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = () => {\n      console.log('My JSON Object:', this.state);\n      let userText = JSON.stringify({\n        string_To_Shift: this.state.string_To_Shift\n      });\n      console.log('userText variable =', userText);\n      axios.post('https://desolate-plateau-54439.herokuapp.com/KWIC', userText, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        const cyclicallyShifted = res.data.cyclicallyShifted;\n\n        for (let str in cyclicallyShifted) {\n          console.log(\"str:  \" + str);\n        }\n\n        const alphabeticallyShifted = res.data.alphabeticallyShifted;\n        console.log('API Response:', cyclicallyShifted, alphabeticallyShifted);\n        this.setState({\n          cyclicallyShifted: JSON.stringify(cyclicallyShifted),\n          alphabeticallyShifted: JSON.stringify(alphabeticallyShifted)\n        });\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    };\n\n    this.checkCyclicShift = () => {\n      if (this.state.cyclicallyShifted.length) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, JSON.parse(this.state.cyclicallyShifted).map((value, index) => {\n          return value.map((val, ind) => {\n            return React.createElement(\"li\", {\n              key: ind,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, val);\n          });\n        }));\n      }\n    };\n\n    this.checkAlphabeticShift = () => {\n      if (this.state.alphabeticallyShifted.length) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, JSON.parse(this.state.alphabeticallyShifted).map((value, index) => {\n          return value.map((val, ind) => {\n            return React.createElement(\"li\", {\n              key: ind,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, val);\n          });\n        }));\n      }\n    };\n  }\n\n  // Show these tags\n  render() {\n    const string_To_Shift = this.state.string_To_Shift;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      divided: \"vertically\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Input\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Insert input and press the green button.\"), React.createElement(Form, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"string_To_Shift\",\n      onChange: this.onChange,\n      value: string_To_Shift,\n      placeholder: \"Input KWIC text here\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      size: \"huge\",\n      animated: \"vertical\",\n      color: \"green\",\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Proceed\"), React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))))), React.createElement(Grid.Row, {\n      columns: 2,\n      verticalAlign: \"middle\",\n      style: {\n        display: 'flex',\n        lineHeight: '90px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Cyclical Shift\"), React.createElement(Segment, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.checkCyclicShift())), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Alphabetical Shift\"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.checkAlphabeticShift())))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Fedolodic/WebstormProjects/cyberminer/src/pages/HomePage.js"],"names":["React","Grid","Form","Container","Icon","Button","Segment","Input","axios","HomePage","Component","state","string_To_Shift","cyclicallyShifted","alphabeticallyShifted","onChange","e","preventDefault","target","name","value","setState","onSubmit","console","log","userText","JSON","stringify","post","headers","then","res","data","str","catch","error","checkCyclicShift","length","parse","map","index","val","ind","checkAlphabeticShift","render","display","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Grid,\n    Form,\n    Container,\n    Icon,\n    Button,\n    Segment,\n    Input\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\n// HomePage Component\nexport default class HomePage extends React.Component {\n\n    // Component variables\n    state = {\n        string_To_Shift: '',\n        cyclicallyShifted: [],\n        alphabeticallyShifted: []\n    };\n\n    // When typing begins\n    onChange = (e) => {\n        e.preventDefault();\n\n        const {name, value} = e.target;\n\n        // This is equal to \"this.setState(inputText : value});\"\n        this.setState({[name]: value});\n    };\n\n    // When go button is clicked\n    onSubmit = () => {\n        console.log('My JSON Object:', this.state);\n\n        let userText = JSON.stringify({\n            string_To_Shift: this.state.string_To_Shift\n        });\n\n        console.log('userText variable =', userText);\n        axios.post('https://desolate-plateau-54439.herokuapp.com/KWIC', userText, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((res) => {\n                console.log(res);\n                const cyclicallyShifted = res.data.cyclicallyShifted;\n\n                for(let str in cyclicallyShifted) {\n                    console.log(\"str:  \" + str);\n                }\n\n                const alphabeticallyShifted = res.data.alphabeticallyShifted;\n                console.log('API Response:', cyclicallyShifted, alphabeticallyShifted);\n\n                this.setState({cyclicallyShifted: JSON.stringify(cyclicallyShifted), \n                    alphabeticallyShifted: JSON.stringify(alphabeticallyShifted)});\n            })\n            .catch(error => {\n                console.log(JSON.stringify(error))\n            });\n    };\n\n    checkCyclicShift = () => {\n        if(this.state.cyclicallyShifted.length) {\n            return <ul>\n                    {JSON.parse(this.state.cyclicallyShifted).map((value, index) => {\n                        return value.map((val, ind) => {\n                            return <li key={ind}>{val}</li>\n                        })\n                    })}\n                </ul>\n        } \n    }\n\n    checkAlphabeticShift= () => {\n        if(this.state.alphabeticallyShifted.length) {\n            return <ul>\n                    {JSON.parse(this.state.alphabeticallyShifted).map((value, index) => {\n                        return value.map((val, ind) => {\n                            return <li key={ind}>{val}</li>\n                        })\n                    })}\n                </ul>\n        } \n    }\n\n    // Show these tags\n    render() {\n\n        const {string_To_Shift} = this.state;\n\n        return (\n            <Container>\n                <Grid divided='vertically' centered>\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <h1 align='center'>Input</h1>\n                            <p>Insert input and press the green button.</p>\n                            <Form size='big'>\n                                <Input type='text' name=\"string_To_Shift\" onChange={this.onChange}\n                                       value={string_To_Shift}\n                                       placeholder='Input KWIC text here' fluid/>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button onClick={this.onSubmit} size='huge' animated='vertical' color='green'\n                                    floated='right'>\n                                <Button.Content hidden>Proceed</Button.Content>\n                                <Button.Content visible>\n                                    <Icon name='arrow circle right'/>\n                                </Button.Content>\n                            </Button>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={2} verticalAlign=\"middle\" style={{display: 'flex', lineHeight: '90px'}}>\n                        <Grid.Column>\n                            <h1 align='center'>Cyclical Shift</h1>\n                            <Segment inverted>\n                                {this.checkCyclicShift()}\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <h1 align='center'>Alphabetical Shift</h1>\n                            <Segment>\n                                {this.checkAlphabeticShift()}\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}