{"version":3,"sources":["components/PageDetails.js","components/SearchBar.js","components/Sorts.js","components/DropDown.js","components/Toggle.js","components/ToolBar.js","components/ResultPages.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["PageDetails","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderPageDetail","url","props","description","link","react_default","a","createElement","className","Segment","href","render","inherits","React","Component","SearchBar","state","input","inputName","labelName","onChange","e","_ref","name","value","setState","defineProperty","onSubmit","renderSearchBar","Form","Field","Input","type","placeholder","Sorts","createClass","key","items","sortType","console","log","lexicographicQuickSort","visitQuickSort","paymentQuickSort","sortArray","low","high","pivot","_partion","index","j","_swap","visitPartion","visits","paymentPartion","payment","element1","element2","temp","DropDown","dropDown","renderDropDown","itemOptions","map","item","text","toString","Label","size","dropDownLabel","Dropdown","placeHolder","selection","options","Toggle","active","onClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","prevState","stop","Button","toggle","ToolBar","renderDropDowns","dropDowns","DropDown_DropDown","sortChange","sortOrder","resultsPerPageChange","resultsPerPage","sortBar","Toggle_Toggle","ResultPages","currentPage","buttonName","activeButton","target","parseInt","renderResults","results","result","res","style","fontSize","HomePage","resultsPerPg","currentPageStart","currentPageEnd","numOfPage","SearchBarName","searchInput","www","searchResults","searched","searchSubmit","userInput","JSON","stringify","axios","post","headers","Content-Type","then","data","SearchInput","catch","error","pageChanged","page","newPage","pageTop","pageBottom","pageStart","pageEnd","toggleState","numOfPages","Math","ceil","sortedResults","sort","searhResults","renderComponents","renderToolBar","SearchBar_SearchBar","renderPageDetails","renderResultPages","pageOfResults","slice","resultUrl","PageDetails_PageDetails","ToolBar_ToolBar","numPages","resultArray","i","push","ResultPages_ResultPages","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8YAIaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIQ,iBAAmB,WACf,IAAMC,EAAMhB,EAAKiB,MAAMD,IACjBE,EAAclB,EAAKiB,MAAMC,YACzBC,EAAOnB,EAAKiB,MAAME,KAExB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,KAAGG,KAAMN,GAAOH,GAChBI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAIJ,MAbxBlB,EAmBI0B,OAAS,WACL,OAAO1B,EAAKe,oBApBpBf,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAAJ,EAAAC,GAAAD,EAAA,CAAiC+B,IAAMC,+CCA1BC,EAAb,SAAAhC,GAAA,SAAAgC,IAAA,IAAA/B,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,GAAA,QAAA1B,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA6B,IAAAlB,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIwB,MAAQ,CACJC,MAAM,GACNC,UAAU,SACVC,UAAU,kBAJlBlC,EAOImC,SAAW,SAACC,EAADC,GAAsB,IAAjBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,MAClBvC,EAAKwC,SAALvC,OAAAwC,EAAA,EAAAxC,CAAA,GAAgBqC,EAAMC,KAR9BvC,EAWI0C,SAAW,WACJ1C,EAAK+B,MAAMC,MAAM1B,SAChBN,EAAKwC,SAAS,CACVP,UAAU,YACdC,UAAU,qBACVlC,EAAKiB,MAAMyB,SAAS1C,EAAK+B,MAAMC,SAhB3ChC,EAoBI2C,gBAAkB,WACd,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACPH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMrB,UAAWvB,EAAK+B,MAAME,UAAWS,SAAU1C,EAAK0C,UAClDtB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACIzB,EAAAC,EAAAC,cAAA,SAAOC,UAAWvB,EAAK+B,MAAMG,WAA7B,cACAd,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,KAAK,QACLT,KAAK,QACLU,YAAY,YACZT,MAAOvC,EAAK+B,MAAMC,MAClBG,SAAUnC,EAAKmC,gBAhCnDnC,EAyCI0B,OAAS,WACL,OACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVvB,EAAK2C,oBA5ClB3C,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAA6B,EAAAhC,GAAAgC,EAAA,CAA+BF,IAAMC,WCCxBoB,EAAb,oBAAAA,IAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,GAAA,OAAAhD,OAAAiD,EAAA,EAAAjD,CAAAgD,EAAA,EAAAE,IAAA,OAAAZ,MAAA,SACSa,EAAOC,GAER,OADAC,QAAQC,IAAIH,EAAOC,GACH,yBAAbA,EACQlD,KAAKqD,uBAAuBJ,EAAO,EAAGA,EAAM9C,OAAS,GAEhD,gBAAb+C,EACQlD,KAAKsD,eAAeL,EAAO,EAAGA,EAAM9C,OAAS,GAExC,cAAb+C,EACQlD,KAAKuD,iBAAiBN,EAAO,EAAGA,EAAM9C,OAAS,QAD1D,IATR,CAAA6C,IAAA,yBAAAZ,MAAA,SAc2BoB,EAAWC,EAAKC,GAGnC,GAFAP,QAAQC,IAAI,SAETK,EAAMC,EAAM,CAIX,IAAIC,EAAQ3D,KAAK4D,SAASJ,EAAWC,EAAKC,GAG1C1D,KAAKqD,uBAAuBG,EAAWC,EAAKE,EAAQ,GACpD3D,KAAKqD,uBAAuBG,EAAWG,EAAQ,EAAGD,GAGtD,OAAOF,IA5Bf,CAAAR,IAAA,WAAAZ,MAAA,SAgCaoB,EAAWC,EAAKC,GASrB,IAPA,IAAIC,EAAQH,EAAUE,GAAM7C,IACxBgD,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAGjD,KAAO8C,IACnBE,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOH,GACtBG,IApDf,CAAAb,IAAA,iBAAAZ,MAAA,SAuDmBoB,EAAWC,EAAKC,GAE/B,GAAGD,EAAMC,EAAM,CAIX,IAAIC,EAAQ3D,KAAKgE,aAAaR,EAAWC,EAAKC,GAG9C1D,KAAKsD,eAAeE,EAAWC,EAAKE,EAAQ,GAC5C3D,KAAKsD,eAAeE,EAAWG,EAAQ,EAAGD,GAG9C,OAAOF,IApEX,CAAAR,IAAA,eAAAZ,MAAA,SAwEiBoB,EAAWC,EAAKC,GAE7B,IAAIC,EAAQH,EAAUE,GAAMO,OAC5Bd,QAAQC,IAAI,WAAYO,GAOxB,IANA,IAAIE,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAGG,QAAUN,IACtBE,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOH,GACtBG,IA7FX,CAAAb,IAAA,mBAAAZ,MAAA,SAgGqBoB,EAAWC,EAAKC,GAEjC,GAAGD,EAAMC,EAAM,CAIX,IAAIC,EAAQ3D,KAAKkE,eAAeV,EAAWC,EAAKC,GAGhD1D,KAAKuD,iBAAiBC,EAAWC,EAAKE,EAAQ,GAC9C3D,KAAKuD,iBAAiBC,EAAWG,EAAQ,EAAGD,GAGhD,OAAOF,IA7GX,CAAAR,IAAA,iBAAAZ,MAAA,SAiHmBoB,EAAWC,EAAKC,GAS/B,IAPA,IAAIC,EAAQH,EAAUE,GAAMS,QACxBN,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAGK,SAAWR,IACvBE,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACA7D,KAAK+D,MAAMP,EAAWK,EAAOH,GACtBG,IArIX,CAAAb,IAAA,QAAAZ,MAAA,SAyIUoB,EAAWY,EAAUC,GACvB,IAAIC,EAAOd,EAAUY,GACrBZ,EAAUY,GAAYZ,EAAUa,GAChCb,EAAUa,GAAYC,MA5I9BxB,EAAA,oBCFayB,EAAb,SAAA5E,GAAA,SAAA4E,IAAA,IAAA3E,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,GAAA,QAAAtE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyE,IAAA9D,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACI4B,SAAW,SAACC,EAAGuC,GACX3E,EAAKiB,MAAMkB,SAASwC,EAASpC,QAFrCvC,EAKI4E,eAAiB,WACb,IAEMC,EAFQ7E,EAAKiB,MAAMmC,MAEC0B,IAAI,SAAAC,GAC1B,MACI,CACI5B,IAAK4B,EACLC,KAAMD,EAAKE,WACX1C,MAAOwC,KAKnB,OACI3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOC,KAAK,SACPnF,EAAKiB,MAAMmE,eAEhBhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACIrC,YAAahD,EAAKiB,MAAMqE,YACxBC,WAAS,EACTC,QAASX,EACT1C,SAAUnC,EAAKmC,aA3BnCnC,EAgCI0B,OAAS,WACL,OACI1B,EAAK4E,kBAlCjB5E,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAAyE,EAAA5E,GAAA4E,EAAA,CAA8B9C,IAAMC,oBCAvB4D,EAAb,SAAA3F,GAAA,SAAA2F,IAAA,IAAA1F,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,GAAA,QAAArF,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAwF,IAAA7E,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIwB,MAAQ,CACJ2D,QAAO,GAFf1F,EAKI2F,QALJ1F,OAAA2F,EAAA,EAAA3F,CAAA4F,EAAAxE,EAAAyE,KAKc,SAAAC,IAAA,OAAAF,EAAAxE,EAAA2E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAnG,EAAKwC,SAAS,SAAA4D,GAAS,MAAK,CAACV,QAASU,EAAUV,UADhD,OAEN1F,EAAKiB,MAAM0E,QAAQ3F,EAAK+B,MAAM2D,QAFxB,wBAAAO,EAAAI,SAAAN,MALd/F,EAUI0B,OAAS,WAAM,IACJgE,EAAU1F,EAAK+B,MAAf2D,OAEP,OACItE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQC,QAAM,EAACb,OAAQA,EAAQC,QAAS3F,EAAK2F,SAA7C,cAdZ3F,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAAwF,EAAA3F,GAAA2F,EAAA,CAA4B7D,IAAMC,WCCrB2E,EAAb,SAAA1G,GAAA,SAAA0G,IAAA,IAAAzG,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,GAAA,QAAApG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAuG,IAAA5F,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIoF,QAAU,SAAAD,GACN1F,EAAKiB,MAAM0E,QAAQD,IAF3B1F,EAKIyG,gBAAkB,WAGd,OAFkBzG,EAAKiB,MAAMyF,UAEZ5B,IAAI,SAAAH,GACjB,OAAUvD,EAAAC,EAAAC,cAACqF,EAAD,CACNrB,YAAaX,EAASW,YACtBlC,MAASuB,EAASvB,MAClBgC,cAAiBT,EAASS,mBAZ1CpF,EAiBI4G,WAAa,SAACC,GACV7G,EAAKiB,MAAM2F,WAAWC,IAlB9B7G,EAqBI8G,qBAAuB,SAACC,GACpB/G,EAAKiB,MAAM6F,qBAAqBC,IAtBxC/G,EAyBI0B,OAAS,WACL,IAAMsF,EAAUhH,EAAKiB,MAAM+F,QACrBD,EAAiB/G,EAAKiB,MAAM8F,eAElC,OACI3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC2F,EAAD,CAAQtB,QAAS3F,EAAK2F,UACtBvE,EAAAC,EAAAC,cAACqF,EAAD,CACIrB,YAAa0B,EAAQ1B,YACrBlC,MAAS4D,EAAQ5D,MACjBgC,cAAiB4B,EAAQ5B,cACzBjD,SAAUnC,EAAK4G,aACnBxF,EAAAC,EAAAC,cAACqF,EAAD,CACIrB,YAAayB,EAAezB,YAAYL,WACxC7B,MAAS2D,EAAe3D,MACxBgC,cAAiB2B,EAAe3B,cAChCjD,SAAUnC,EAAK8G,yBAzCnC9G,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAAuG,EAAA1G,GAAA0G,EAAA,CAA6B5E,IAAMC,WCAtBqF,UAAb,SAAApH,GAAA,SAAAoH,IAAA,IAAAnH,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+G,GAAA,QAAA9G,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAiH,IAAAtG,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIwB,MAAQ,CACJoF,YAAa,EACbC,WAAY,SACZC,aAAc,IAJtBrH,EAOI2F,QAAU,SAACvD,GACPpC,EAAKwC,SAAS,CAAC6E,aAAcjF,EAAEkF,OAAOhF,OACtCtC,EAAKiB,MAAM0E,QAAQ4B,SAASnF,EAAEkF,OAAO/E,SAT7CvC,EAYIwH,cAAgB,WACZ,OACIxH,EAAKiB,MAAMwG,QAAQ3C,IAAI,SAAC4C,EAAQ1D,GAC5B,IAAM2D,EAAMD,EAAS,EAEfpF,EAAO,SAAW0B,EAClBzC,EAAYe,IAFCtC,EAAK+B,MAAMsF,aAEU,eAAiB,SAEzD,OACIjG,EAAAC,EAAAC,cAAA,UACIC,UAAWA,EACXe,KAAMA,EACNC,MAAOoF,EAAKxE,IAAKuE,EACjB/B,QAAS3F,EAAK2F,QACdiC,MAAO,CAACC,SAAU,UACbF,MA3B7B3H,EAkCI0B,OAAS,WACL,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACMxB,EAAKwH,mBAtC3BxH,EAAA,OAAAC,OAAA0B,EAAA,EAAA1B,CAAAiH,EAAApH,GAAAoH,EAAA,CAAiCtF,IAAMC,8BCKlBiG,6MACnB/F,MAAQ,CACNqB,MAAO,GACP2E,aAAc,GACdC,iBAAkB,EAClBC,eAAgB,EAChBd,YAAa,EACbe,UAAW,EACXC,cAAe,SACfC,YAAa,GACb7B,QAAQ,EACR8B,IAAK,GACLC,cAAe,GACfC,UAAU,KAGZvB,QAAU,CACR1B,YAAa,uBACblC,MAAO,CACL,uBACA,cACA,cAEFgC,cAAe,sBAGjB2B,eAAiB,CACfzB,YAAa,GACblC,MAAO,CACL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCgC,cAAe,yBAQjBoD,mDAAe,SAAAzC,EAAO/D,GAAP,IAAAyG,EAAA,OAAA5C,EAAAxE,EAAA2E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPsC,EAAYC,KAAKC,UACrB,CACE3G,MAAOA,IAHEiE,EAAAE,KAAA,EAOPyC,IAAMC,KAAK,kDAAmDJ,EAAW,CACvEK,QAAS,CACLC,eAAgB,sBAGzBC,KAAK,SAACrB,GACHrE,QAAQC,IAAIoE,GACZ,IAAMW,EAAgBX,EAAIsB,KAAKX,cAG/BtI,EAAKwC,SAAS,CACZ0G,YAAYlH,EACZmG,cAAc,kBACd5B,QAAQ,EACRY,YAAa,EACboB,UAAU,EACVD,cAAeA,IAGjBhF,QAAQC,IAAI+E,GACZtI,EAAK8G,qBAAqB,MAE7BqC,MAAM,SAAAC,GACH9F,QAAQC,IAAImF,KAAKC,UAAUS,MA9BpB,wBAAAnD,EAAAI,SAAAN,8DAkCfsD,YAAc,SAAAC,GACZ,IAAMvC,EAAiB/G,EAAK+B,MAAMgG,aAC5BwB,EAAUD,EACVE,GAAWD,EAAU,GAAKxC,EAC1B0C,EAAaD,EAAUzC,EAE7B/G,EAAKwC,SAAS,CACZkH,UAAWF,EACXG,QAASF,EACTtC,YAAaoC,OAIjBhD,OAAS,SAACqD,GACRA,EACC5J,EAAKwC,SAAS,CAAC6F,IAAI,SAAWrI,EAAKwC,SAAS,CAAC6F,IAAI,QAGpDvB,qBAAuB,SAACC,GACtB,IAAM5B,EAAOnF,EAAK+B,MAAMuG,cAAchI,OAChCuJ,EAAaC,KAAKC,KAAK5E,EAAO4B,GAG9ByC,IAFcK,EAAa7J,EAAK+B,MAAMoF,YAC1C0C,EAAa7J,EAAK+B,MAAMoF,aACK,GAAKJ,EAC9B0C,EAAaD,EAAUzC,EAE7B/G,EAAKwC,SAAS,CACZ0F,UAAU2B,EACVH,UAAWF,EACXG,QAASF,EACT1B,aAAchB,OAIlBH,WAAa,SAACvD,GACZC,QAAQC,IAAIF,GACZ,IAAMiF,EAAgBtI,EAAK+B,MAAMuG,cAC3B0B,GAAgB,IAAI/G,GAAQgH,KAAK3B,EAAejF,GACtDC,QAAQC,IAAIyG,GACZhK,EAAKwC,SAAS,CACZ0H,aAAcF,OAIlBG,iBAAmB,WACjB,OACE/I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZvB,EAAKoK,gBACNhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWvB,EAAK+B,MAAMoG,eACzB/G,EAAAC,EAAAC,cAAC+I,EAAD,CAAW3H,SAAU1C,EAAKwI,gBAE5BpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZvB,EAAKsK,qBAERlJ,EAAAC,EAAAC,cAAA,WACCtB,EAAKuK,wBAKZD,kBAAoB,WAClB,IAAMd,EAAUxJ,EAAK+B,MAAM2H,UACrBD,EAAazJ,EAAK+B,MAAM4H,QACxBrB,EAAgBtI,EAAK+B,MAAMuG,cACjChF,QAAQC,IAAI+E,GACZ,IAAMkC,EAAgBlC,EAAcmC,MAAMjB,EAASC,GAEnD,GADAnG,QAAQC,IAAI,gBAAiBiH,GAC1BxK,EAAK+B,MAAMwG,SACZ,OACEiC,EAAc1F,IAAI,SAAC4C,EAAQ1D,GACzB,IAAM0G,EAAY1K,EAAK+B,MAAMsG,IAAMX,EAAO1G,IAE1C,OACEI,EAAAC,EAAAC,cAACqJ,EAAD,CACExH,IAAKa,EACLhD,IAAK0J,EACLvJ,KAAMuG,EAAOvG,KACbD,YAAawG,EAAOxG,mBAMhCkJ,cAAgB,WACd,GAAGpK,EAAK+B,MAAMwE,OACZ,OACGnF,EAAAC,EAAAC,cAACsJ,EAAD,CACC5D,QAAShH,EAAKgH,QACdD,eAAgB/G,EAAK+G,eACrBpB,QAAS3F,EAAKuG,OACdK,WAAY5G,EAAK4G,WACjBE,qBAAsB9G,EAAK8G,0BAKnCyD,kBAAoB,WAClB,GAAGvK,EAAK+B,MAAMwE,OAAQ,CAIpB,IAHA,IAAMsE,EAAW7K,EAAK+B,MAAMmG,UACxB4C,EAAc,GAEVC,EAAI,EAAGA,EAAIF,EAAUE,IAC3BD,EAAYE,KAAKD,GAEnB,OACE3J,EAAAC,EAAAC,cAAC2J,EAAD,CAAatF,QAAS3F,EAAKqJ,YAAa5B,QAASqD,QAKvDpJ,OAAS,WACP,OAAO1B,EAAKmK,iDA5LsBvI,IAAMC,WCHvBqJ,mLAEb,OACE9J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAeC,SAAS,eACpBhK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW1D,aALlBlG,IAAMC,WCMnB4J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpK,OAAON,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.347267d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PageDetails.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class PageDetails extends React.Component {\r\n\r\n    renderPageDetail = () => {\r\n        const url = this.props.url;\r\n        const description = this.props.description;\r\n        const link = this.props.link;\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    <a href={link}>{url}</a>\r\n                    <br/>\r\n                    <br/>        \r\n                    <p>{description}</p> \r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return this.renderPageDetail();\r\n    }\r\n}","import React from 'react';\r\nimport \"./SearchBar.css\";\r\nimport { Form, Input} from 'semantic-ui-react';\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        input:\"\",\r\n        inputName:\"Submit\",\r\n        labelName:\"SearchBarLabel\"\r\n    }\r\n\r\n    onChange = (e, {name, value}) => {\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if(this.state.input.length) {\r\n            this.setState({\r\n                inputName:\"Submitted\",\r\n            labelName:\"SearchedBarLabel\"});\r\n            this.props.onSubmit(this.state.input);\r\n        }\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (\r\n            <div className=\"Form\">\r\n                <div className=\"ui container\">\r\n                        <Form className={this.state.inputName} onSubmit={this.onSubmit}>\r\n                            <Form.Field>\r\n                                <label className={this.state.labelName}>CyberMiner</label>\r\n                                <Input\r\n                                    type=\"Input\"\r\n                                    name=\"input\"\r\n                                    placeholder=\"Search...\"\r\n                                    value={this.state.input}\r\n                                    onChange={this.onChange}\r\n                                    />            \r\n                            </Form.Field>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"SearchBar\">\r\n            {this.renderSearchBar()}\r\n        </div>);\r\n    }\r\n}","/****************************\r\n *                          *\r\n *       Sort Content       *\r\n *                          *\r\n ****************************/\r\nexport class Sorts {\r\n    sort(items, sortType) {\r\n        console.log(items, sortType);\r\n        if(sortType === \"Alphabetic Ascending\")\r\n            return this.lexicographicQuickSort(items, 0, items.length - 1);\r\n        \r\n        if(sortType === \"Most Visits\")\r\n            return this.visitQuickSort(items, 0, items.length - 1);\r\n\r\n        if(sortType === \"By Pament\")\r\n            return this.paymentQuickSort(items, 0, items.length - 1);\r\n\r\n    }\r\n\r\n    lexicographicQuickSort(sortArray, low, high) {\r\n        console.log(\"hello\");\r\n        // while low and high are not equal\r\n        if(low < high) {\r\n            // puts greater values to right of pivot (high)\r\n            // puts lesser values on right and returns pivots \r\n            // new position\r\n            let pivot = this._partion(sortArray, low, high);\r\n\r\n            // sort each side of the pivot\r\n            this.lexicographicQuickSort(sortArray, low, pivot - 1);\r\n            this.lexicographicQuickSort(sortArray, pivot + 1, high);\r\n        }\r\n        \r\n        return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    _partion(sortArray, low, high) {\r\n\r\n        let pivot = sortArray[high].url;\r\n        let index = low - 1;\r\n\r\n        /* while sortArray[j] is <= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n        for(let j = low; j < high; j++) {\r\n            \r\n            if(sortArray[j].url <= pivot) {\r\n                index++;\r\n                this._swap(sortArray, index, j);\r\n            }\r\n        }\r\n\r\n        // place pivot in the right spot\r\n        index++;\r\n        this._swap(sortArray, index, high);\r\n        return index;\r\n    }\r\n\r\n    visitQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.visitPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.visitQuickSort(sortArray, low, pivot - 1);\r\n        this.visitQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    visitPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].visits;\r\n    console.log(\"pivot:  \", pivot);\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].visits >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    paymentQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.paymentPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.paymentQuickSort(sortArray, low, pivot - 1);\r\n        this.paymentQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    paymentPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].payment;\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].payment >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    // swap elements in an array\r\n    _swap(sortArray, element1, element2) {\r\n        let temp = sortArray[element1];\r\n        sortArray[element1] = sortArray[element2];\r\n        sortArray[element2] = temp;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Dropdown, Label } from \"semantic-ui-react\";\r\n\r\nexport class DropDown extends React.Component {\r\n    onChange = (e, dropDown) => {\r\n        this.props.onChange(dropDown.value);\r\n    }\r\n\r\n    renderDropDown = () => {\r\n        const items = this.props.items;\r\n        \r\n        const itemOptions = items.map(item => {\r\n            return(\r\n                {\r\n                    key: item,\r\n                    text: item.toString(),\r\n                    value: item\r\n                }\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"drop\">\r\n                <Label size='large'>\r\n                    {this.props.dropDownLabel}\r\n                </Label>\r\n                <Dropdown\r\n                    placeholder={this.props.placeHolder}\r\n                    selection\r\n                    options={itemOptions}\r\n                    onChange={this.onChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            this.renderDropDown()\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Toggle extends React.Component {\r\n    state = {\r\n        active:false\r\n    };\r\n\r\n    onClick = async () => {\r\n        await this.setState(prevState => ({active: !prevState.active}));\r\n        this.props.onClick(this.state.active);\r\n    }\r\n\r\n    render = () => {\r\n        const {active} = this.state;\r\n\r\n        return (\r\n            <Button toggle active={active} onClick={this.onClick}>\r\n                ToggleWWW\r\n            </Button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { Toggle } from \"./Toggle\";\r\n\r\nexport class ToolBar extends React.Component {\r\n    onClick = active => {\r\n        this.props.onClick(active);\r\n    }\r\n\r\n    renderDropDowns = () => {\r\n        const dropDowns = this.props.dropDowns;\r\n        \r\n        return dropDowns.map(dropDown => {\r\n            return (  <DropDown \r\n                placeHolder={dropDown.placeHolder}\r\n                items = {dropDown.items}\r\n                dropDownLabel = {dropDown.dropDownLabel}/>\r\n            )\r\n        });\r\n    }\r\n\r\n    sortChange = (sortOrder) => {\r\n        this.props.sortChange(sortOrder);\r\n    }\r\n\r\n    resultsPerPageChange = (resultsPerPage) => {\r\n        this.props.resultsPerPageChange(resultsPerPage);\r\n    }\r\n\r\n    render = () => {\r\n        const sortBar = this.props.sortBar;\r\n        const resultsPerPage = this.props.resultsPerPage;\r\n        \r\n        return (\r\n            <div className=\"inverted ui menu\">\r\n                <Toggle onClick={this.onClick}/>\r\n                <DropDown \r\n                    placeHolder={sortBar.placeHolder}\r\n                    items = {sortBar.items}\r\n                    dropDownLabel = {sortBar.dropDownLabel}\r\n                    onChange={this.sortChange}/>\r\n                <DropDown \r\n                    placeHolder={resultsPerPage.placeHolder.toString()}\r\n                    items = {resultsPerPage.items}\r\n                    dropDownLabel = {resultsPerPage.dropDownLabel}\r\n                    onChange={this.resultsPerPageChange}\r\n                    />\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./ResultPages.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class ResultPages extends React.Component {\r\n    state = {\r\n        currentPage: 1,\r\n        buttonName: \"button\",\r\n        activeButton: \"\"\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({activeButton: e.target.name});\r\n        this.props.onClick(parseInt(e.target.value));\r\n    }\r\n\r\n    renderResults = () => {\r\n        return (\r\n            this.props.results.map((result, index) => {\r\n                const res = result + 1;\r\n                const activeName = this.state.activeButton;\r\n                const name = \"button\" + index;\r\n                const className = name === activeName ? \"activeButton\" : \"button\";\r\n\r\n                return (\r\n                    <button\r\n                        className={className}\r\n                        name={name}   \r\n                        value={res} key={result}\r\n                        onClick={this.onClick}\r\n                        style={{fontSize: \"1.5em\"}}>\r\n                            {res}\r\n                    </button>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    { this.renderResults() }\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './HomePage.css';\r\nimport { PageDetails } from \"../components/PageDetails\";\r\nimport { SearchBar } from \"../components/SearchBar\";\r\nimport { Sorts } from \"../components/Sorts\";\r\nimport { ToolBar } from \"../components/ToolBar\";\r\nimport { ResultPages } from \"../components/ResultPages\";\r\nimport axios from \"axios\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  state = {\r\n    items: [],\r\n    resultsPerPg: 10,\r\n    currentPageStart: 0,\r\n    currentPageEnd: 0,\r\n    currentPage: 1,\r\n    numOfPage: 0,\r\n    SearchBarName: \"Search\",\r\n    searchInput: \"\",\r\n    toggle: false,\r\n    www: \"\",\r\n    searchResults: [],\r\n    searched: false\r\n  }\r\n\r\n  sortBar = {\r\n    placeHolder: \"Alphabetic Ascending\",\r\n    items: [\r\n      \"Alphabetic Ascending\",\r\n      \"Most Visits\",\r\n      \"By Payment\"\r\n    ],\r\n    dropDownLabel: \"Results Order:  \"\r\n  }\r\n\r\n  resultsPerPage = {\r\n    placeHolder: 10,\r\n    items: [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n      11, 12, 13, 14, 15, 16, 17, 18, 19, 110,\r\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 20,\r\n      31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50\r\n    ],\r\n    dropDownLabel: \"Results Per Page:  \"\r\n  }\r\n\r\n/****************************\r\n *                          *\r\n *   App rendering Content  *\r\n *                          *\r\n ****************************/\r\n  searchSubmit = async (input) => {   \r\n    const userInput = JSON.stringify( \r\n      {\r\n        input: input\r\n      }\r\n    )\r\n\r\n    await axios.post('https://cyberminerkwic.herokuapp.com/cyberminer', userInput, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n    })\r\n      .then((res) => {\r\n          console.log(res);\r\n          const searchResults = res.data.searchResults;\r\n        \r\n\r\n          this.setState({\r\n            SearchInput:input,\r\n            SearchBarName:\"Search-Searched\",\r\n            toggle: true,\r\n            currentPage: 1,\r\n            searched: true,\r\n            searchResults: searchResults\r\n          });\r\n\r\n          console.log(searchResults);\r\n          this.resultsPerPageChange(10);  \r\n      })\r\n      .catch(error => {\r\n          console.log(JSON.stringify(error))\r\n      });\r\n  }\r\n\r\n  pageChanged = page => {\r\n    const resultsPerPage = this.state.resultsPerPg;\r\n    const newPage = page;\r\n    const pageTop = (newPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      currentPage: newPage\r\n    });\r\n  }\r\n\r\n  toggle = (toggleState) => {\r\n    toggleState ?\r\n     this.setState({www:\"www.\"}) : this.setState({www:\"\"});\r\n  }\r\n\r\n  resultsPerPageChange = (resultsPerPage) => {\r\n    const size = this.state.searchResults.length;\r\n    const numOfPages = Math.ceil(size / resultsPerPage);\r\n    const currentPage = numOfPages < this.state.currentPage ?\r\n      numOfPages : this.state.currentPage;\r\n    const pageTop = (currentPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      numOfPage:numOfPages,\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      resultsPerPg: resultsPerPage\r\n    });\r\n  }\r\n\r\n  sortChange = (sortType) => {\r\n    console.log(sortType);\r\n    const searchResults = this.state.searchResults;\r\n    const sortedResults = new Sorts().sort(searchResults, sortType);\r\n    console.log(sortedResults);\r\n    this.setState({\r\n      searhResults: sortedResults\r\n    })\r\n  }\r\n  \r\n  renderComponents = () => {\r\n    return(\r\n      <div className=\"App\">\r\n        {this.renderToolBar()}\r\n        <div className={this.state.SearchBarName}>\r\n          <SearchBar onSubmit={this.searchSubmit}/>\r\n        </div>\r\n        <div className=\"WebPageDetails\">\r\n          {this.renderPageDetails()}\r\n        </div>\r\n        <br/>\r\n        {this.renderResultPages()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderPageDetails = () => {\r\n    const pageTop = this.state.pageStart;\r\n    const pageBottom = this.state.pageEnd;\r\n    const searchResults = this.state.searchResults;\r\n    console.log(searchResults);\r\n    const pageOfResults = searchResults.slice(pageTop, pageBottom);\r\n    console.log(\"pageResults: \", pageOfResults);\r\n    if(this.state.searched)\r\n      return (\r\n        pageOfResults.map((result, index) => {\r\n          const resultUrl = this.state.www + result.url;\r\n\r\n          return (\r\n            <PageDetails\r\n              key={index}\r\n              url={resultUrl}\r\n              link={result.link}\r\n              description={result.description} />\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  renderToolBar = () => {\r\n    if(this.state.toggle) {\r\n      return ( \r\n         <ToolBar\r\n          sortBar={this.sortBar}\r\n          resultsPerPage={this.resultsPerPage} \r\n          onClick={this.toggle}\r\n          sortChange={this.sortChange}\r\n          resultsPerPageChange={this.resultsPerPageChange}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderResultPages = () => {\r\n    if(this.state.toggle) {\r\n      const numPages = this.state.numOfPage;\r\n      let resultArray = [];\r\n\r\n      for(let i = 0; i < numPages; i++) \r\n        resultArray.push(i);\r\n\r\n      return (\r\n        <ResultPages onClick={this.pageChanged} results={resultArray}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return this.renderComponents();\r\n  }\r\n}","\r\n\r\nimport React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n              <BrowserRouter basename=\"/cyberminer\">\r\n                  <Route path=\"/\" exact component={HomePage}/>\r\n              </BrowserRouter>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}