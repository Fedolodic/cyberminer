{"version":3,"sources":["components/PageDetails.js","components/SearchBar.js","components/Sorts.js","components/DropDown.js","components/Toggle.js","components/ToolBar.js","components/ResultPages.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["PageDetails","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderPageDetail","url","props","description","link","react_default","a","createElement","className","Segment","href","render","inherits","React","Component","SearchBar","state","input","inputName","labelName","results","currentIndex","wordIndex","onChange","_ref2","asyncToGenerator","regenerator_default","mark","_callee","e","_ref","name","value","currentValue","subString","autocorrect","wrap","_context","prev","next","console","log","JSON","stringify","autoCorrect","axios","post","headers","Content-Type","then","res","_this$setState","data","setState","defineProperty","catch","error","stop","_x","_x2","onSubmit","correct","_ref3","_callee2","word","i","j","_context2","target","substring","_x3","renderSearchBar","Form","Field","Input","list","type","placeholder","id","onClick","Sorts","createClass","key","items","sortType","lexicographicQuickSort","visitQuickSort","paymentQuickSort","sortArray","low","high","pivot","_partion","index","_swap","visitPartion","visits","paymentPartion","payment","element1","element2","temp","DropDown","dropDown","renderDropDown","itemOptions","map","item","text","toString","Label","size","dropDownLabel","Dropdown","placeHolder","selection","options","Toggle","active","prevState","Button","toggle","ToolBar","renderDropDowns","dropDowns","DropDown_DropDown","sortChange","sortOrder","resultsPerPageChange","resultsPerPage","sortBar","Toggle_Toggle","ResultPages","currentPage","buttonName","activeButton","parseInt","renderResults","result","style","fontSize","HomePage","resultsPerPg","currentPageStart","currentPageEnd","numOfPage","SearchBarName","searchInput","www","searchResults","searched","searchSubmit","userInput","SearchInput","pageChanged","page","newPage","pageTop","pageBottom","pageStart","pageEnd","toggleState","numOfPages","Math","ceil","sortedResults","sort","searhResults","renderComponents","renderToolBar","SearchBar_SearchBar","renderPageDetails","renderResultPages","pageOfResults","slice","resultUrl","PageDetails_PageDetails","ToolBar_ToolBar","numPages","resultArray","push","ResultPages_ResultPages","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73796bb1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PageDetails.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class PageDetails extends React.Component {\r\n\r\n    renderPageDetail = () => {\r\n        const url = this.props.url;\r\n        const description = this.props.description;\r\n        const link = this.props.link;\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    <a href={link}>{url}</a>\r\n                    <br/>\r\n                    <br/>        \r\n                    <p>{description}</p> \r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return this.renderPageDetail();\r\n    }\r\n}","import React from 'react';\r\nimport \"./SearchBar.css\";\r\nimport { Form, Input} from 'semantic-ui-react';\r\nimport axios from \"axios\";\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        input:\"\",\r\n        inputName:\"Submit\",\r\n        labelName:\"SearchBarLabel\",\r\n        results: [],\r\n        currentIndex: 0,\r\n        wordIndex: 0\r\n    }\r\n\r\n    onChange = async (e, {name, value}) => {\r\n        const currentValue = value;\r\n        console.log(typeof(value));\r\n        const currentIndex = value.length - 1;\r\n        const subString = currentValue.subString(this.state.wordIndex, currentIndex + 1);\r\n        console.log(subString);\r\n        const autocorrect = JSON.stringify({autoCorrect: value})\r\n        axios.post(\"https://cyberminerkwic.herokuapp.com/autocorrect\", autocorrect, \r\n            { headers: {\r\n                'Content-Type': 'application/json'\r\n            }}\r\n        )\r\n            .then(res => {\r\n                const autoCorrect = res.data.autoCorrect;\r\n\r\n                this.setState({[name]:value, results:autoCorrect});\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if(this.state.input.length) {\r\n            this.setState({\r\n                inputName:\"Submitted\",\r\n            labelName:\"SearchedBarLabel\"});\r\n            this.props.onSubmit(this.state.input);\r\n        }\r\n    }\r\n\r\n    correct = async (e) => {\r\n        const value = e.target.value;\r\n        const wordIndex = this.state.wordIndex;\r\n\r\n        console.log(value);\r\n        if(value[value.length - 1] === \" \")\r\n        {\r\n            const currentIndex = value.length - 1\r\n            ;\r\n            const word = value.substring(wordIndex, currentIndex + 1);\r\n            for(let i = 0, j = wordIndex; i < word.length; i++, j++) {\r\n                value[JSON] = word[i];\r\n            }\r\n\r\n            this.setState({value: value, wordIndex: value.length});\r\n        }\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (\r\n            <div className=\"Form\">\r\n                <div className=\"ui container\">\r\n                        <Form className={this.state.inputName} onSubmit={this.onSubmit}>\r\n                            <Form.Field>\r\n                                <label className={this.state.labelName}>CyberMiner</label>\r\n                                <Input\r\n                                    list=\"autocorrect\"\r\n                                    type=\"Input\"\r\n                                    name=\"input\"\r\n                                    placeholder=\"Search...\"\r\n                                    value={this.state.input}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    <datalist id=\"autocorrect\">\r\n                                        <option \r\n                                            value={this.state.results}\r\n                                            onClick={this.correct} />\r\n                                    </datalist>\r\n                            \r\n                                                \r\n                            </Form.Field>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"SearchBar\">\r\n            {this.renderSearchBar()}\r\n        </div>);\r\n    }\r\n}","/****************************\r\n *                          *\r\n *       Sort Content       *\r\n *                          *\r\n ****************************/\r\nexport class Sorts {\r\n    sort(items, sortType) {\r\n        console.log(items, sortType);\r\n        if(sortType === \"Alphabetic Ascending\")\r\n            return this.lexicographicQuickSort(items, 0, items.length - 1);\r\n        \r\n        if(sortType === \"Most Visits\")\r\n            return this.visitQuickSort(items, 0, items.length - 1);\r\n\r\n        if(sortType === \"By Pament\")\r\n            return this.paymentQuickSort(items, 0, items.length - 1);\r\n\r\n    }\r\n\r\n    lexicographicQuickSort(sortArray, low, high) {\r\n        console.log(\"hello\");\r\n        // while low and high are not equal\r\n        if(low < high) {\r\n            // puts greater values to right of pivot (high)\r\n            // puts lesser values on right and returns pivots \r\n            // new position\r\n            let pivot = this._partion(sortArray, low, high);\r\n\r\n            // sort each side of the pivot\r\n            this.lexicographicQuickSort(sortArray, low, pivot - 1);\r\n            this.lexicographicQuickSort(sortArray, pivot + 1, high);\r\n        }\r\n        \r\n        return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    _partion(sortArray, low, high) {\r\n\r\n        let pivot = sortArray[high].url;\r\n        let index = low - 1;\r\n\r\n        /* while sortArray[j] is <= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n        for(let j = low; j < high; j++) {\r\n            \r\n            if(sortArray[j].url <= pivot) {\r\n                index++;\r\n                this._swap(sortArray, index, j);\r\n            }\r\n        }\r\n\r\n        // place pivot in the right spot\r\n        index++;\r\n        this._swap(sortArray, index, high);\r\n        return index;\r\n    }\r\n\r\n    visitQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.visitPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.visitQuickSort(sortArray, low, pivot - 1);\r\n        this.visitQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    visitPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].visits;\r\n    console.log(\"pivot:  \", pivot);\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].visits >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    paymentQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.paymentPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.paymentQuickSort(sortArray, low, pivot - 1);\r\n        this.paymentQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    paymentPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].payment;\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].payment >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    // swap elements in an array\r\n    _swap(sortArray, element1, element2) {\r\n        let temp = sortArray[element1];\r\n        sortArray[element1] = sortArray[element2];\r\n        sortArray[element2] = temp;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Dropdown, Label } from \"semantic-ui-react\";\r\nexport class DropDown extends React.Component {\r\n    onChange = (e, dropDown) => {\r\n        this.props.onChange(dropDown.value);\r\n    }\r\n\r\n    renderDropDown = () => {\r\n        const items = this.props.items;\r\n        \r\n        const itemOptions = items.map(item => {\r\n            return(\r\n                {\r\n                    key: item,\r\n                    text: item.toString(),\r\n                    value: item\r\n                }\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"drop\">\r\n                <Label size='large'>\r\n                    {this.props.dropDownLabel}\r\n                </Label>\r\n                <Dropdown\r\n                    placeholder={this.props.placeHolder}\r\n                    selection\r\n                    options={itemOptions}\r\n                    onChange={this.onChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            this.renderDropDown()\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Toggle extends React.Component {\r\n    state = {\r\n        active:false\r\n    };\r\n\r\n    onClick = async () => {\r\n        await this.setState(prevState => ({active: !prevState.active}));\r\n        this.props.onClick(this.state.active);\r\n    }\r\n\r\n    render = () => {\r\n        const {active} = this.state;\r\n\r\n        return (\r\n            <Button toggle active={active} onClick={this.onClick}>\r\n                ToggleWWW\r\n            </Button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { Toggle } from \"./Toggle\";\r\n\r\nexport class ToolBar extends React.Component {\r\n    onClick = active => {\r\n        this.props.onClick(active);\r\n    }\r\n\r\n    renderDropDowns = () => {\r\n        const dropDowns = this.props.dropDowns;\r\n        \r\n        return dropDowns.map(dropDown => {\r\n            return (  <DropDown \r\n                placeHolder={dropDown.placeHolder}\r\n                items = {dropDown.items}\r\n                dropDownLabel = {dropDown.dropDownLabel}/>\r\n            )\r\n        });\r\n    }\r\n\r\n    sortChange = (sortOrder) => {\r\n        this.props.sortChange(sortOrder);\r\n    }\r\n\r\n    resultsPerPageChange = (resultsPerPage) => {\r\n        this.props.resultsPerPageChange(resultsPerPage);\r\n    }\r\n\r\n    render = () => {\r\n        const sortBar = this.props.sortBar;\r\n        const resultsPerPage = this.props.resultsPerPage;\r\n        \r\n        return (\r\n            <div className=\"inverted ui menu\">\r\n                <Toggle onClick={this.onClick}/>\r\n                <DropDown \r\n                    placeHolder={sortBar.placeHolder}\r\n                    items = {sortBar.items}\r\n                    dropDownLabel = {sortBar.dropDownLabel}\r\n                    onChange={this.sortChange}/>\r\n                <DropDown \r\n                    placeHolder={resultsPerPage.placeHolder.toString()}\r\n                    items = {resultsPerPage.items}\r\n                    dropDownLabel = {resultsPerPage.dropDownLabel}\r\n                    onChange={this.resultsPerPageChange}\r\n                    />\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./ResultPages.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class ResultPages extends React.Component {\r\n    state = {\r\n        currentPage: 1,\r\n        buttonName: \"button\",\r\n        activeButton: \"\"\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({activeButton: e.target.name});\r\n        this.props.onClick(parseInt(e.target.value));\r\n    }\r\n\r\n    renderResults = () => {\r\n        return (\r\n            this.props.results.map((result, index) => {\r\n                const res = result + 1;\r\n                const activeName = this.state.activeButton;\r\n                const name = \"button\" + index;\r\n                const className = name === activeName ? \"activeButton\" : \"button\";\r\n\r\n                return (\r\n                    <button\r\n                        className={className}\r\n                        name={name}   \r\n                        value={res} key={result}\r\n                        onClick={this.onClick}\r\n                        style={{fontSize: \"1.5em\"}}>\r\n                            {res}\r\n                    </button>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    { this.renderResults() }\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './HomePage.css';\r\nimport { PageDetails } from \"../components/PageDetails\";\r\nimport { SearchBar } from \"../components/SearchBar\";\r\nimport { Sorts } from \"../components/Sorts\";\r\nimport { ToolBar } from \"../components/ToolBar\";\r\nimport { ResultPages } from \"../components/ResultPages\";\r\nimport axios from \"axios\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  state = {\r\n    items: [],\r\n    resultsPerPg: 10,\r\n    currentPageStart: 0,\r\n    currentPageEnd: 0,\r\n    currentPage: 1,\r\n    numOfPage: 0,\r\n    SearchBarName: \"Search\",\r\n    searchInput: \"\",\r\n    toggle: false,\r\n    www: \"\",\r\n    searchResults: [],\r\n    searched: false\r\n  }\r\n\r\n  sortBar = {\r\n    placeHolder: \"Alphabetic Ascending\",\r\n    items: [\r\n      \"Alphabetic Ascending\",\r\n      \"Most Visits\",\r\n      \"By Payment\"\r\n    ],\r\n    dropDownLabel: \"Results Order:  \"\r\n  }\r\n\r\n  resultsPerPage = {\r\n    placeHolder: 10,\r\n    items: [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n      11, 12, 13, 14, 15, 16, 17, 18, 19, 110,\r\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 20,\r\n      31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50\r\n    ],\r\n    dropDownLabel: \"Results Per Page:  \"\r\n  }\r\n\r\n/****************************\r\n *                          *\r\n *   App rendering Content  *\r\n *                          *\r\n ****************************/\r\n  searchSubmit = async (input) => {   \r\n    const userInput = JSON.stringify( \r\n      {\r\n        input: input\r\n      }\r\n    )\r\n\r\n    await axios.post('https://cyberminerkwic.herokuapp.com/cyberminer', userInput, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n    })\r\n      .then((res) => {\r\n          console.log(res);\r\n          const searchResults = res.data.searchResults;\r\n        \r\n         /* searchResults.forEach(result => {\r\n            axios.get(\"https://www.adsfadfa.com\",\r\n              {\r\n                headers: {\r\n                  'Access-Control-Allow-Origin': '*'\r\n                }\r\n              }\r\n            )\r\n          })\r\n            .catch(error => {\r\n              console.log(error);\r\n            })*/\r\n\r\n          this.setState({\r\n            SearchInput:input,\r\n            SearchBarName:\"Search-Searched\",\r\n            toggle: true,\r\n            currentPage: 1,\r\n            searched: true,\r\n            searchResults: searchResults\r\n          });\r\n\r\n          console.log(searchResults);\r\n          this.resultsPerPageChange(10);  \r\n      })\r\n      .catch(error => {\r\n          console.log(JSON.stringify(error))\r\n      });\r\n  }\r\n\r\n  pageChanged = page => {\r\n    const resultsPerPage = this.state.resultsPerPg;\r\n    const newPage = page;\r\n    const pageTop = (newPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      currentPage: newPage\r\n    });\r\n  }\r\n\r\n  toggle = (toggleState) => {\r\n    toggleState ?\r\n     this.setState({www:\"www.\"}) : this.setState({www:\"\"});\r\n  }\r\n\r\n  resultsPerPageChange = (resultsPerPage) => {\r\n    const size = this.state.searchResults.length;\r\n    const numOfPages = Math.ceil(size / resultsPerPage);\r\n    const currentPage = numOfPages < this.state.currentPage ?\r\n      numOfPages : this.state.currentPage;\r\n    const pageTop = (currentPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      numOfPage:numOfPages,\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      resultsPerPg: resultsPerPage\r\n    });\r\n  }\r\n\r\n  sortChange = (sortType) => {\r\n    console.log(sortType);\r\n    const searchResults = this.state.searchResults;\r\n    const sortedResults = new Sorts().sort(searchResults, sortType);\r\n    console.log(sortedResults);\r\n    this.setState({\r\n      searhResults: sortedResults\r\n    })\r\n  }\r\n  \r\n  renderComponents = () => {\r\n    return(\r\n      <div className=\"App\">\r\n        {this.renderToolBar()}\r\n        <div className={this.state.SearchBarName}>\r\n          <SearchBar onSubmit={this.searchSubmit}/>\r\n        </div>\r\n        <div className=\"WebPageDetails\">\r\n          {this.renderPageDetails()}\r\n        </div>\r\n        <br/>\r\n        {this.renderResultPages()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderPageDetails = () => {\r\n    const pageTop = this.state.pageStart;\r\n    const pageBottom = this.state.pageEnd;\r\n    const searchResults = this.state.searchResults;\r\n    console.log(searchResults);\r\n    const pageOfResults = searchResults.slice(pageTop, pageBottom);\r\n    console.log(\"pageResults: \", pageOfResults);\r\n    if(this.state.searched)\r\n      return (\r\n        pageOfResults.map((result, index) => {\r\n          const resultUrl = this.state.www + result.url;\r\n\r\n          return (\r\n            <PageDetails\r\n              key={index}\r\n              url={resultUrl}\r\n              link={result.link}\r\n              description={result.description} />\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  renderToolBar = () => {\r\n    if(this.state.toggle) {\r\n      return ( \r\n         <ToolBar\r\n          sortBar={this.sortBar}\r\n          resultsPerPage={this.resultsPerPage} \r\n          onClick={this.toggle}\r\n          sortChange={this.sortChange}\r\n          resultsPerPageChange={this.resultsPerPageChange}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderResultPages = () => {\r\n    if(this.state.toggle) {\r\n      const numPages = this.state.numOfPage;\r\n      let resultArray = [];\r\n\r\n      for(let i = 0; i < numPages; i++) \r\n        resultArray.push(i);\r\n\r\n      return (\r\n        <ResultPages onClick={this.pageChanged} results={resultArray}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return this.renderComponents();\r\n  }\r\n}","\r\n\r\nimport React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n              <BrowserRouter basename=\"/cyberminer\">\r\n                  <Route path=\"/\" exact component={HomePage}/>\r\n              </BrowserRouter>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}