{"version":3,"sources":["components/PageDetails.js","components/SearchBar.js","components/Sorts.js","components/DropDown.js","components/Toggle.js","components/ToolBar.js","components/ResultPages.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["PageDetails","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onClick","e","preventDefault","console","log","target","href","link","JSON","stringify","axios","post","headers","Content-Type","renderPageDetail","url","props","description","react_default","a","createElement","className","Segment","value","render","inherits","React","Component","SearchBar","state","input","inputName","labelName","componentDidMount","onChange","_ref","name","setState","defineProperty","onSubmit","renderSearchBar","Form","Field","Input","type","placeholder","Sorts","createClass","key","items","sortType","lexicographicQuickSort","visitQuickSort","paymentQuickSort","sortArray","low","high","pivot","_partion","index","j","_swap","visitPartion","visits","paymentPartion","payment","element1","element2","temp","DropDown","dropDown","renderDropDown","itemOptions","map","item","text","toString","Label","size","dropDownLabel","Dropdown","placeHolder","selection","options","Toggle","active","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","prevState","stop","Button","toggle","ToolBar","renderDropDowns","dropDowns","DropDown_DropDown","sortChange","sortOrder","resultsPerPageChange","resultsPerPage","sortBar","Toggle_Toggle","ResultPages","currentPage","buttonName","activeButton","parseInt","renderResults","results","result","res","style","fontSize","HomePage","resultsPerPg","currentPageStart","currentPageEnd","numOfPage","SearchBarName","searchInput","www","searchResults","searched","searchSubmit","userInput","then","data","SearchInput","catch","error","pageChanged","page","newPage","pageTop","pageBottom","pageStart","pageEnd","toggleState","numOfPages","Math","ceil","sortedResults","sort","searhResults","renderComponents","renderToolBar","SearchBar_SearchBar","renderPageDetails","renderResultPages","pageOfResults","slice","resultUrl","PageDetails_PageDetails","ToolBar_ToolBar","numPages","resultArray","i","push","ResultPages_ResultPages","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+ZAKaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIQ,QAAU,SAACC,GACPA,EAAEC,iBACFC,QAAQC,IAAI,WAAYH,EAAEI,OAAOC,MACjC,IAAMC,EAAOC,KAAKC,UAAU,CAACF,KAAMN,EAAEI,OAAOC,OAE5CI,IAAMC,KAAK,0CAA2CJ,EACtD,CACIK,QAAS,CACLC,eAAgB,uBAVhC5B,EAeI6B,iBAAmB,WACf,IAAMC,EAAM9B,EAAK+B,MAAMD,IACjBE,EAAchC,EAAK+B,MAAMC,YACzBV,EAAOtB,EAAK+B,MAAMT,KAExB,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,KAAGd,KAAMC,EAAMgB,MAAOhB,EAAMP,QAASf,EAAKe,SAAUe,GACpDG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAIH,MA1BxBhC,EAgCIuC,OAAS,WACL,OAAOvC,EAAK6B,oBAjCpB7B,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAAJ,EAAAC,GAAAD,EAAA,CAAiC4C,IAAMC,+CCA1BC,EAAb,SAAA7C,GAAA,SAAA6C,IAAA,IAAA5C,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAA,QAAAvC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0C,IAAA/B,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJC,MAAM,GACNC,UAAU,SACVC,UAAU,kBAJlB/C,EAOIgD,kBAAoB,aAPxBhD,EAWIiD,SAAW,SAACjC,EAADkC,GAAsB,IAAjBC,EAAiBD,EAAjBC,KAAMb,EAAWY,EAAXZ,MAClBtC,EAAKoD,SAALnD,OAAAoD,EAAA,EAAApD,CAAA,GAAgBkD,EAAMb,KAZ9BtC,EAeIsD,SAAW,WACJtD,EAAK4C,MAAMC,MAAMvC,SAChBN,EAAKoD,SAAS,CACVN,UAAU,YACdC,UAAU,qBACV/C,EAAK+B,MAAMuB,SAAStD,EAAK4C,MAAMC,SApB3C7C,EAwBIuD,gBAAkB,WACd,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACPH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMpB,UAAWpC,EAAK4C,MAAME,UAAWQ,SAAUtD,EAAKsD,UAClDrB,EAAAC,EAAAC,cAACqB,EAAA,EAAKC,MAAN,KACIxB,EAAAC,EAAAC,cAAA,SAAOC,UAAWpC,EAAK4C,MAAMG,WAA7B,cACAd,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACIC,KAAK,QACLR,KAAK,QACLS,YAAY,YACZtB,MAAOtC,EAAK4C,MAAMC,MAClBI,SAAUjD,EAAKiD,gBApCnDjD,EA6CIuC,OAAS,WACL,OACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVpC,EAAKuD,oBAhDlBvD,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAA0C,EAAA7C,GAAA6C,EAAA,CAA+BF,IAAMC,WCAxBmB,EAAb,oBAAAA,IAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA4D,EAAA,EAAAE,IAAA,OAAAzB,MAAA,SACS0B,EAAOC,GAER,OADA/C,QAAQC,IAAI6C,EAAOC,GACH,yBAAbA,EACQ9D,KAAK+D,uBAAuBF,EAAO,EAAGA,EAAM1D,OAAS,GAEhD,gBAAb2D,EACQ9D,KAAKgE,eAAeH,EAAO,EAAGA,EAAM1D,OAAS,GAExC,cAAb2D,EACQ9D,KAAKiE,iBAAiBJ,EAAO,EAAGA,EAAM1D,OAAS,QAD1D,IATR,CAAAyD,IAAA,yBAAAzB,MAAA,SAc2B+B,EAAWC,EAAKC,GAGnC,GAFArD,QAAQC,IAAI,SAETmD,EAAMC,EAAM,CAIX,IAAIC,EAAQrE,KAAKsE,SAASJ,EAAWC,EAAKC,GAG1CpE,KAAK+D,uBAAuBG,EAAWC,EAAKE,EAAQ,GACpDrE,KAAK+D,uBAAuBG,EAAWG,EAAQ,EAAGD,GAGtD,OAAOF,IA5Bf,CAAAN,IAAA,WAAAzB,MAAA,SAgCa+B,EAAWC,EAAKC,GASrB,IAPA,IAAIC,EAAQH,EAAUE,GAAMzC,IACxB4C,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAG7C,KAAO0C,IACnBE,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOH,GACtBG,IApDf,CAAAX,IAAA,iBAAAzB,MAAA,SAuDmB+B,EAAWC,EAAKC,GAE/B,GAAGD,EAAMC,EAAM,CAIX,IAAIC,EAAQrE,KAAK0E,aAAaR,EAAWC,EAAKC,GAG9CpE,KAAKgE,eAAeE,EAAWC,EAAKE,EAAQ,GAC5CrE,KAAKgE,eAAeE,EAAWG,EAAQ,EAAGD,GAG9C,OAAOF,IApEX,CAAAN,IAAA,eAAAzB,MAAA,SAwEiB+B,EAAWC,EAAKC,GAE7B,IAAIC,EAAQH,EAAUE,GAAMO,OAC5B5D,QAAQC,IAAI,WAAYqD,GAOxB,IANA,IAAIE,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAGG,QAAUN,IACtBE,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOH,GACtBG,IA7FX,CAAAX,IAAA,mBAAAzB,MAAA,SAgGqB+B,EAAWC,EAAKC,GAEjC,GAAGD,EAAMC,EAAM,CAIX,IAAIC,EAAQrE,KAAK4E,eAAeV,EAAWC,EAAKC,GAGhDpE,KAAKiE,iBAAiBC,EAAWC,EAAKE,EAAQ,GAC9CrE,KAAKiE,iBAAiBC,EAAWG,EAAQ,EAAGD,GAGhD,OAAOF,IA7GX,CAAAN,IAAA,iBAAAzB,MAAA,SAiHmB+B,EAAWC,EAAKC,GAS/B,IAPA,IAAIC,EAAQH,EAAUE,GAAMS,QACxBN,EAAQJ,EAAM,EAMVK,EAAIL,EAAKK,EAAIJ,EAAMI,IAEpBN,EAAUM,GAAGK,SAAWR,IACvBE,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOC,IAOrC,OAFAD,IACAvE,KAAKyE,MAAMP,EAAWK,EAAOH,GACtBG,IArIX,CAAAX,IAAA,QAAAzB,MAAA,SAyIU+B,EAAWY,EAAUC,GACvB,IAAIC,EAAOd,EAAUY,GACrBZ,EAAUY,GAAYZ,EAAUa,GAChCb,EAAUa,GAAYC,MA5I9BtB,EAAA,oBCFauB,EAAb,SAAAtF,GAAA,SAAAsF,IAAA,IAAArF,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,GAAA,QAAAhF,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAmF,IAAAxE,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACI0C,SAAW,SAACjC,EAAGqE,GACXrF,EAAK+B,MAAMkB,SAASoC,EAAS/C,QAFrCtC,EAKIsF,eAAiB,WACb,IAEMC,EAFQvF,EAAK+B,MAAMiC,MAECwB,IAAI,SAAAC,GAC1B,MACI,CACI1B,IAAK0B,EACLC,KAAMD,EAAKE,WACXrD,MAAOmD,KAKnB,OACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAOC,KAAK,SACP7F,EAAK+B,MAAM+D,eAEhB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACInC,YAAa5D,EAAK+B,MAAMiE,YACxBC,WAAS,EACTC,QAASX,EACTtC,SAAUjD,EAAKiD,aA3BnCjD,EAgCIuC,OAAS,WACL,OACIvC,EAAKsF,kBAlCjBtF,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAAmF,EAAAtF,GAAAsF,EAAA,CAA8B3C,IAAMC,oBCAvByD,EAAb,SAAArG,GAAA,SAAAqG,IAAA,IAAApG,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,GAAA,QAAA/F,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAkG,IAAAvF,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJwD,QAAO,GAFfpG,EAKIe,QALJd,OAAAoG,EAAA,EAAApG,CAAAqG,EAAApE,EAAAqE,KAKc,SAAAC,IAAA,OAAAF,EAAApE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACA5G,EAAKoD,SAAS,SAAAyD,GAAS,MAAK,CAACT,QAASS,EAAUT,UADhD,OAENpG,EAAK+B,MAAMhB,QAAQf,EAAK4C,MAAMwD,QAFxB,wBAAAM,EAAAI,SAAAN,MALdxG,EAUIuC,OAAS,WAAM,IACJ6D,EAAUpG,EAAK4C,MAAfwD,OAEP,OACInE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQC,QAAM,EAACZ,OAAQA,EAAQrF,QAASf,EAAKe,SAA7C,cAdZf,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAAkG,EAAArG,GAAAqG,EAAA,CAA4B1D,IAAMC,WCCrBuE,EAAb,SAAAnH,GAAA,SAAAmH,IAAA,IAAAlH,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,GAAA,QAAA7G,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgH,IAAArG,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,QAAU,SAAAqF,GACNpG,EAAK+B,MAAMhB,QAAQqF,IAF3BpG,EAKIkH,gBAAkB,WAGd,OAFkBlH,EAAK+B,MAAMoF,UAEZ3B,IAAI,SAAAH,GACjB,OAAUpD,EAAAC,EAAAC,cAACiF,EAAD,CACNpB,YAAaX,EAASW,YACtBhC,MAASqB,EAASrB,MAClB8B,cAAiBT,EAASS,mBAZ1C9F,EAiBIqH,WAAa,SAACC,GACVtH,EAAK+B,MAAMsF,WAAWC,IAlB9BtH,EAqBIuH,qBAAuB,SAACC,GACpBxH,EAAK+B,MAAMwF,qBAAqBC,IAtBxCxH,EAyBIuC,OAAS,WACL,IAAMkF,EAAUzH,EAAK+B,MAAM0F,QACrBD,EAAiBxH,EAAK+B,MAAMyF,eAElC,OACIvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACuF,EAAD,CAAQ3G,QAASf,EAAKe,UACtBkB,EAAAC,EAAAC,cAACiF,EAAD,CACIpB,YAAayB,EAAQzB,YACrBhC,MAASyD,EAAQzD,MACjB8B,cAAiB2B,EAAQ3B,cACzB7C,SAAUjD,EAAKqH,aACnBpF,EAAAC,EAAAC,cAACiF,EAAD,CACIpB,YAAawB,EAAexB,YAAYL,WACxC3B,MAASwD,EAAexD,MACxB8B,cAAiB0B,EAAe1B,cAChC7C,SAAUjD,EAAKuH,yBAzCnCvH,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAAgH,EAAAnH,GAAAmH,EAAA,CAA6BxE,IAAMC,WCAtBiF,UAAb,SAAA7H,GAAA,SAAA6H,IAAA,IAAA5H,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,GAAA,QAAAvH,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0H,IAAA/G,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJgF,YAAa,EACbC,WAAY,SACZC,aAAc,IAJtB9H,EAOIe,QAAU,SAACC,GACPhB,EAAKoD,SAAS,CAAC0E,aAAc9G,EAAEI,OAAO+B,OACtCnD,EAAK+B,MAAMhB,QAAQgH,SAAS/G,EAAEI,OAAOkB,SAT7CtC,EAYIgI,cAAgB,WACZ,OACIhI,EAAK+B,MAAMkG,QAAQzC,IAAI,SAAC0C,EAAQxD,GAC5B,IAAMyD,EAAMD,EAAS,EAEf/E,EAAO,SAAWuB,EAClBtC,EAAYe,IAFCnD,EAAK4C,MAAMkF,aAEU,eAAiB,SAEzD,OACI7F,EAAAC,EAAAC,cAAA,UACIC,UAAWA,EACXe,KAAMA,EACNb,MAAO6F,EAAKpE,IAAKmE,EACjBnH,QAASf,EAAKe,QACdqH,MAAO,CAACC,SAAU,UACbF,MA3B7BnI,EAkCIuC,OAAS,WACL,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACMrC,EAAKgI,mBAtC3BhI,EAAA,OAAAC,OAAAuC,EAAA,EAAAvC,CAAA0H,EAAA7H,GAAA6H,EAAA,CAAiClF,IAAMC,YCKlB4F,6MACnB1F,MAAQ,CACNoB,MAAO,GACPuE,aAAc,GACdC,iBAAkB,EAClBC,eAAgB,EAChBb,YAAa,EACbc,UAAW,EACXC,cAAe,SACfC,YAAa,GACb5B,QAAQ,EACR6B,IAAK,GACLC,cAAe,GACfC,UAAU,KAGZtB,QAAU,CACRzB,YAAa,uBACbhC,MAAO,CACL,uBACA,cACA,cAEF8B,cAAe,sBAGjB0B,eAAiB,CACfxB,YAAa,GACbhC,MAAO,CACL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtC8B,cAAe,yBAQjBkD,mDAAe,SAAAxC,EAAO3D,GAAP,IAAAoG,EAAA,OAAA3C,EAAApE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPqC,EAAY1H,KAAKC,UACrB,CACEqB,MAAOA,IAGX3B,QAAQC,IAAI0B,GANC6D,EAAAE,KAAA,EAOPnF,IAAMC,KAAK,kDAAmDuH,EAAW,CACvEtH,QAAS,CACLC,eAAgB,sBAGzBsH,KAAK,SAACf,GACHjH,QAAQC,IAAIgH,GACZ,IAAMW,EAAgBX,EAAIgB,KAAKL,cAU/B9I,EAAKoD,SAAS,CACZgG,YAAYvG,EACZ8F,cAAc,kBACd3B,QAAQ,EACRY,YAAa,EACbmB,UAAU,EACVD,cAAeA,IAGjB5H,QAAQC,IAAI2H,GACZ9I,EAAKuH,qBAAqB,MAE7B8B,MAAM,SAAAC,GACHpI,QAAQC,IAAII,KAAKC,UAAU8H,MArCpB,wBAAA5C,EAAAI,SAAAN,8DAyCf+C,YAAc,SAAAC,GACZ,IAAMhC,EAAiBxH,EAAK4C,MAAM2F,aAC5BkB,EAAUD,EACVE,GAAWD,EAAU,GAAKjC,EAC1BmC,EAAaD,EAAUlC,EAE7BxH,EAAKoD,SAAS,CACZwG,UAAWF,EACXG,QAASF,EACT/B,YAAa6B,OAIjBzC,OAAS,SAAC8C,GACRA,EACC9J,EAAKoD,SAAS,CAACyF,IAAI,SAAW7I,EAAKoD,SAAS,CAACyF,IAAI,QAGpDtB,qBAAuB,SAACC,GACtB,IAAM3B,EAAO7F,EAAK4C,MAAMkG,cAAcxI,OAChCyJ,EAAaC,KAAKC,KAAKpE,EAAO2B,GAG9BkC,IAFcK,EAAa/J,EAAK4C,MAAMgF,YAC1CmC,EAAa/J,EAAK4C,MAAMgF,aACK,GAAKJ,EAC9BmC,EAAaD,EAAUlC,EAE7BxH,EAAKoD,SAAS,CACZsF,UAAUqB,EACVH,UAAWF,EACXG,QAASF,EACTpB,aAAcf,OAIlBH,WAAa,SAACpD,GACZ/C,QAAQC,IAAI8C,GACZ,IAAM6E,EAAgB9I,EAAK4C,MAAMkG,cAC3BoB,GAAgB,IAAIrG,GAAQsG,KAAKrB,EAAe7E,GACtD/C,QAAQC,IAAI+I,GACZlK,EAAKoD,SAAS,CACZgH,aAAcF,OAIlBG,iBAAmB,WACjB,OACEpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZpC,EAAKsK,gBACNrI,EAAAC,EAAAC,cAAA,OAAKC,UAAWpC,EAAK4C,MAAM+F,eACzB1G,EAAAC,EAAAC,cAACoI,EAAD,CAAWjH,SAAUtD,EAAKgJ,gBAE5B/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZpC,EAAKwK,qBAERvI,EAAAC,EAAAC,cAAA,WACCnC,EAAKyK,wBAKZD,kBAAoB,WAClB,IAAMd,EAAU1J,EAAK4C,MAAMgH,UACrBD,EAAa3J,EAAK4C,MAAMiH,QACxBf,EAAgB9I,EAAK4C,MAAMkG,cACjC5H,QAAQC,IAAI2H,GACZ,IAAM4B,EAAgB5B,EAAc6B,MAAMjB,EAASC,GAEnD,GADAzI,QAAQC,IAAI,gBAAiBuJ,GAC1B1K,EAAK4C,MAAMmG,SACZ,OACE2B,EAAclF,IAAI,SAAC0C,EAAQxD,GACzB,IAAMkG,EAAY5K,EAAK4C,MAAMiG,IAAMX,EAAOpG,IAE1C,OACEG,EAAAC,EAAAC,cAAC0I,EAAD,CACE9G,IAAKW,EACL5C,IAAK8I,EACLtJ,KAAM4G,EAAO5G,KACbU,YAAakG,EAAOlG,mBAMhCsI,cAAgB,WACd,GAAGtK,EAAK4C,MAAMoE,OACZ,OACG/E,EAAAC,EAAAC,cAAC2I,EAAD,CACCrD,QAASzH,EAAKyH,QACdD,eAAgBxH,EAAKwH,eACrBzG,QAASf,EAAKgH,OACdK,WAAYrH,EAAKqH,WACjBE,qBAAsBvH,EAAKuH,0BAKnCkD,kBAAoB,WAClB,GAAGzK,EAAK4C,MAAMoE,OAAQ,CAIpB,IAHA,IAAM+D,EAAW/K,EAAK4C,MAAM8F,UACxBsC,EAAc,GAEVC,EAAI,EAAGA,EAAIF,EAAUE,IAC3BD,EAAYE,KAAKD,GAEnB,OACEhJ,EAAAC,EAAAC,cAACgJ,EAAD,CAAapK,QAASf,EAAKuJ,YAAatB,QAAS+C,QAKvDzI,OAAS,WACP,OAAOvC,EAAKqK,iDAnMsB5H,IAAMC,WCHvB0I,mLAEb,OACEnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAeC,SAAS,eACpBrJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpD,aALlB7F,IAAMC,WCMnBiJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASzJ,OAAON,EAAAC,EAAAC,cAAC8J,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.b5d44c0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PageDetails.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nexport class PageDetails extends React.Component {\r\n\r\n    onClick = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"e href: \", e.target.href);\r\n        const link = JSON.stringify({link: e.target.href});\r\n\r\n        axios.post(\"https://cyberminerkwic.herokuapp.com/db\", link, \r\n        {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPageDetail = () => {\r\n        const url = this.props.url;\r\n        const description = this.props.description;\r\n        const link = this.props.link;\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    <a href={link} value={link} onClick={this.onClick}>{url}</a>\r\n                    <br/>\r\n                    <br/>        \r\n                    <p>{description}</p> \r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return this.renderPageDetail();\r\n    }\r\n}","import React from 'react';\r\nimport \"./SearchBar.css\";\r\nimport { Form, Input} from 'semantic-ui-react';\r\n\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        input:\"\",\r\n        inputName:\"Submit\",\r\n        labelName:\"SearchBarLabel\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    onChange = (e, {name, value}) => {\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if(this.state.input.length) {\r\n            this.setState({\r\n                inputName:\"Submitted\",\r\n            labelName:\"SearchedBarLabel\"});\r\n            this.props.onSubmit(this.state.input);\r\n        }\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (\r\n            <div className=\"Form\">\r\n                <div className=\"ui container\">\r\n                        <Form className={this.state.inputName} onSubmit={this.onSubmit}>\r\n                            <Form.Field>\r\n                                <label className={this.state.labelName}>CyberMiner</label>\r\n                                <Input\r\n                                    type=\"Input\"\r\n                                    name=\"input\"\r\n                                    placeholder=\"Search...\"\r\n                                    value={this.state.input}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                            </Form.Field>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"SearchBar\">\r\n            {this.renderSearchBar()}\r\n        </div>);\r\n    }\r\n}","/****************************\r\n *                          *\r\n *       Sort Content       *\r\n *                          *\r\n ****************************/\r\nexport class Sorts {\r\n    sort(items, sortType) {\r\n        console.log(items, sortType);\r\n        if(sortType === \"Alphabetic Ascending\")\r\n            return this.lexicographicQuickSort(items, 0, items.length - 1);\r\n        \r\n        if(sortType === \"Most Visits\")\r\n            return this.visitQuickSort(items, 0, items.length - 1);\r\n\r\n        if(sortType === \"By Pament\")\r\n            return this.paymentQuickSort(items, 0, items.length - 1);\r\n\r\n    }\r\n\r\n    lexicographicQuickSort(sortArray, low, high) {\r\n        console.log(\"hello\");\r\n        // while low and high are not equal\r\n        if(low < high) {\r\n            // puts greater values to right of pivot (high)\r\n            // puts lesser values on right and returns pivots \r\n            // new position\r\n            let pivot = this._partion(sortArray, low, high);\r\n\r\n            // sort each side of the pivot\r\n            this.lexicographicQuickSort(sortArray, low, pivot - 1);\r\n            this.lexicographicQuickSort(sortArray, pivot + 1, high);\r\n        }\r\n        \r\n        return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    _partion(sortArray, low, high) {\r\n\r\n        let pivot = sortArray[high].url;\r\n        let index = low - 1;\r\n\r\n        /* while sortArray[j] is <= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n        for(let j = low; j < high; j++) {\r\n            \r\n            if(sortArray[j].url <= pivot) {\r\n                index++;\r\n                this._swap(sortArray, index, j);\r\n            }\r\n        }\r\n\r\n        // place pivot in the right spot\r\n        index++;\r\n        this._swap(sortArray, index, high);\r\n        return index;\r\n    }\r\n\r\n    visitQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.visitPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.visitQuickSort(sortArray, low, pivot - 1);\r\n        this.visitQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    visitPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].visits;\r\n    console.log(\"pivot:  \", pivot);\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].visits >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    paymentQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.paymentPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.paymentQuickSort(sortArray, low, pivot - 1);\r\n        this.paymentQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    paymentPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].payment;\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].payment >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    // swap elements in an array\r\n    _swap(sortArray, element1, element2) {\r\n        let temp = sortArray[element1];\r\n        sortArray[element1] = sortArray[element2];\r\n        sortArray[element2] = temp;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Dropdown, Label } from \"semantic-ui-react\";\r\n\r\nexport class DropDown extends React.Component {\r\n    onChange = (e, dropDown) => {\r\n        this.props.onChange(dropDown.value);\r\n    }\r\n\r\n    renderDropDown = () => {\r\n        const items = this.props.items;\r\n        \r\n        const itemOptions = items.map(item => {\r\n            return(\r\n                {\r\n                    key: item,\r\n                    text: item.toString(),\r\n                    value: item\r\n                }\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"drop\">\r\n                <Label size='large'>\r\n                    {this.props.dropDownLabel}\r\n                </Label>\r\n                <Dropdown\r\n                    placeholder={this.props.placeHolder}\r\n                    selection\r\n                    options={itemOptions}\r\n                    onChange={this.onChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            this.renderDropDown()\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Toggle extends React.Component {\r\n    state = {\r\n        active:false\r\n    };\r\n\r\n    onClick = async () => {\r\n        await this.setState(prevState => ({active: !prevState.active}));\r\n        this.props.onClick(this.state.active);\r\n    }\r\n\r\n    render = () => {\r\n        const {active} = this.state;\r\n\r\n        return (\r\n            <Button toggle active={active} onClick={this.onClick}>\r\n                ToggleWWW\r\n            </Button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { Toggle } from \"./Toggle\";\r\n\r\nexport class ToolBar extends React.Component {\r\n    onClick = active => {\r\n        this.props.onClick(active);\r\n    }\r\n\r\n    renderDropDowns = () => {\r\n        const dropDowns = this.props.dropDowns;\r\n        \r\n        return dropDowns.map(dropDown => {\r\n            return (  <DropDown \r\n                placeHolder={dropDown.placeHolder}\r\n                items = {dropDown.items}\r\n                dropDownLabel = {dropDown.dropDownLabel}/>\r\n            )\r\n        });\r\n    }\r\n\r\n    sortChange = (sortOrder) => {\r\n        this.props.sortChange(sortOrder);\r\n    }\r\n\r\n    resultsPerPageChange = (resultsPerPage) => {\r\n        this.props.resultsPerPageChange(resultsPerPage);\r\n    }\r\n\r\n    render = () => {\r\n        const sortBar = this.props.sortBar;\r\n        const resultsPerPage = this.props.resultsPerPage;\r\n        \r\n        return (\r\n            <div className=\"inverted ui menu\">\r\n                <Toggle onClick={this.onClick}/>\r\n                <DropDown \r\n                    placeHolder={sortBar.placeHolder}\r\n                    items = {sortBar.items}\r\n                    dropDownLabel = {sortBar.dropDownLabel}\r\n                    onChange={this.sortChange}/>\r\n                <DropDown \r\n                    placeHolder={resultsPerPage.placeHolder.toString()}\r\n                    items = {resultsPerPage.items}\r\n                    dropDownLabel = {resultsPerPage.dropDownLabel}\r\n                    onChange={this.resultsPerPageChange}\r\n                    />\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./ResultPages.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class ResultPages extends React.Component {\r\n    state = {\r\n        currentPage: 1,\r\n        buttonName: \"button\",\r\n        activeButton: \"\"\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({activeButton: e.target.name});\r\n        this.props.onClick(parseInt(e.target.value));\r\n    }\r\n\r\n    renderResults = () => {\r\n        return (\r\n            this.props.results.map((result, index) => {\r\n                const res = result + 1;\r\n                const activeName = this.state.activeButton;\r\n                const name = \"button\" + index;\r\n                const className = name === activeName ? \"activeButton\" : \"button\";\r\n\r\n                return (\r\n                    <button\r\n                        className={className}\r\n                        name={name}   \r\n                        value={res} key={result}\r\n                        onClick={this.onClick}\r\n                        style={{fontSize: \"1.5em\"}}>\r\n                            {res}\r\n                    </button>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    { this.renderResults() }\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './HomePage.css';\r\nimport { PageDetails } from \"../components/PageDetails\";\r\nimport { SearchBar } from \"../components/SearchBar\";\r\nimport { Sorts } from \"../components/Sorts\";\r\nimport { ToolBar } from \"../components/ToolBar\";\r\nimport { ResultPages } from \"../components/ResultPages\";\r\nimport axios from \"axios\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  state = {\r\n    items: [],\r\n    resultsPerPg: 10,\r\n    currentPageStart: 0,\r\n    currentPageEnd: 0,\r\n    currentPage: 1,\r\n    numOfPage: 0,\r\n    SearchBarName: \"Search\",\r\n    searchInput: \"\",\r\n    toggle: false,\r\n    www: \"\",\r\n    searchResults: [],\r\n    searched: false\r\n  }\r\n\r\n  sortBar = {\r\n    placeHolder: \"Alphabetic Ascending\",\r\n    items: [\r\n      \"Alphabetic Ascending\",\r\n      \"Most Visits\",\r\n      \"By Payment\"\r\n    ],\r\n    dropDownLabel: \"Results Order:  \"\r\n  }\r\n\r\n  resultsPerPage = {\r\n    placeHolder: 10,\r\n    items: [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n      11, 12, 13, 14, 15, 16, 17, 18, 19, 110,\r\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 20,\r\n      31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50\r\n    ],\r\n    dropDownLabel: \"Results Per Page:  \"\r\n  }\r\n\r\n/****************************\r\n *                          *\r\n *   App rendering Content  *\r\n *                          *\r\n ****************************/\r\n  searchSubmit = async (input) => {   \r\n    const userInput = JSON.stringify( \r\n      {\r\n        input: input\r\n      }\r\n    )\r\n    console.log(input);\r\n    await axios.post('https://cyberminerkwic.herokuapp.com/cyberminer', userInput, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n    })\r\n      .then((res) => {\r\n          console.log(res);\r\n          const searchResults = res.data.searchResults;\r\n        \r\n         /* searchResults.forEach(result => {\r\n            axios.get(\"https://www.adsfadfa.com\",\r\n            )\r\n          })\r\n            .catch(error => {\r\n              console.log(error);\r\n            })*/\r\n\r\n          this.setState({\r\n            SearchInput:input,\r\n            SearchBarName:\"Search-Searched\",\r\n            toggle: true,\r\n            currentPage: 1,\r\n            searched: true,\r\n            searchResults: searchResults\r\n          });\r\n\r\n          console.log(searchResults);\r\n          this.resultsPerPageChange(10);  \r\n      })\r\n      .catch(error => {\r\n          console.log(JSON.stringify(error))\r\n      });\r\n  }\r\n\r\n  pageChanged = page => {\r\n    const resultsPerPage = this.state.resultsPerPg;\r\n    const newPage = page;\r\n    const pageTop = (newPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      currentPage: newPage\r\n    });\r\n  }\r\n\r\n  toggle = (toggleState) => {\r\n    toggleState ?\r\n     this.setState({www:\"www.\"}) : this.setState({www:\"\"});\r\n  }\r\n\r\n  resultsPerPageChange = (resultsPerPage) => {\r\n    const size = this.state.searchResults.length;\r\n    const numOfPages = Math.ceil(size / resultsPerPage);\r\n    const currentPage = numOfPages < this.state.currentPage ?\r\n      numOfPages : this.state.currentPage;\r\n    const pageTop = (currentPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      numOfPage:numOfPages,\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      resultsPerPg: resultsPerPage\r\n    });\r\n  }\r\n\r\n  sortChange = (sortType) => {\r\n    console.log(sortType);\r\n    const searchResults = this.state.searchResults;\r\n    const sortedResults = new Sorts().sort(searchResults, sortType);\r\n    console.log(sortedResults);\r\n    this.setState({\r\n      searhResults: sortedResults\r\n    })\r\n  }\r\n  \r\n  renderComponents = () => {\r\n    return(\r\n      <div className=\"App\">\r\n        {this.renderToolBar()}\r\n        <div className={this.state.SearchBarName}>\r\n          <SearchBar onSubmit={this.searchSubmit}/>\r\n        </div>\r\n        <div className=\"WebPageDetails\">\r\n          {this.renderPageDetails()}\r\n        </div>\r\n        <br/>\r\n        {this.renderResultPages()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderPageDetails = () => {\r\n    const pageTop = this.state.pageStart;\r\n    const pageBottom = this.state.pageEnd;\r\n    const searchResults = this.state.searchResults;\r\n    console.log(searchResults);\r\n    const pageOfResults = searchResults.slice(pageTop, pageBottom);\r\n    console.log(\"pageResults: \", pageOfResults);\r\n    if(this.state.searched)\r\n      return (\r\n        pageOfResults.map((result, index) => {\r\n          const resultUrl = this.state.www + result.url;\r\n\r\n          return (\r\n            <PageDetails\r\n              key={index}\r\n              url={resultUrl}\r\n              link={result.link}\r\n              description={result.description} />\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  renderToolBar = () => {\r\n    if(this.state.toggle) {\r\n      return ( \r\n         <ToolBar\r\n          sortBar={this.sortBar}\r\n          resultsPerPage={this.resultsPerPage} \r\n          onClick={this.toggle}\r\n          sortChange={this.sortChange}\r\n          resultsPerPageChange={this.resultsPerPageChange}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderResultPages = () => {\r\n    if(this.state.toggle) {\r\n      const numPages = this.state.numOfPage;\r\n      let resultArray = [];\r\n\r\n      for(let i = 0; i < numPages; i++) \r\n        resultArray.push(i);\r\n\r\n      return (\r\n        <ResultPages onClick={this.pageChanged} results={resultArray}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return this.renderComponents();\r\n  }\r\n}","\r\n\r\nimport React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n              <BrowserRouter basename=\"/cyberminer\">\r\n                  <Route path=\"/\" exact component={HomePage}/>\r\n              </BrowserRouter>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}