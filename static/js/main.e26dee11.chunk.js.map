{"version":3,"sources":["components/PageDetails.js","components/SearchBar.js","components/Sorts.js","components/DropDown.js","components/Toggle.js","components/ToolBar.js","components/ResultPages.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["PageDetails","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderPageDetail","url","props","description","link","react_default","a","createElement","className","Segment","href","render","inherits","React","Component","SearchBar","state","input","inputName","labelName","results","onChange","_ref2","asyncToGenerator","regenerator_default","mark","_callee","e","_ref","name","value","autocorrect","wrap","_context","prev","next","JSON","stringify","autoCorrect","axios","post","headers","Content-Type","then","res","_this$setState","data","setState","defineProperty","catch","error","console","log","stop","_x","_x2","onSubmit","renderSearchBar","Form","Field","Input","list","type","placeholder","id","map","result","Sorts","createClass","key","items","sortType","lexicographicQuickSort","visitQuickSort","paymentQuickSort","sortArray","low","high","pivot","_partion","index","j","_swap","visitPartion","visits","paymentPartion","payment","element1","element2","temp","DropDown","dropDown","renderDropDown","itemOptions","item","text","toString","Label","size","dropDownLabel","Dropdown","placeHolder","selection","options","Toggle","active","onClick","prevState","Button","toggle","ToolBar","renderDropDowns","dropDowns","DropDown_DropDown","sortChange","sortOrder","resultsPerPageChange","resultsPerPage","sortBar","Toggle_Toggle","ResultPages","currentPage","buttonName","activeButton","target","parseInt","renderResults","style","fontSize","HomePage","resultsPerPg","currentPageStart","currentPageEnd","numOfPage","SearchBarName","searchInput","www","searchResults","searched","searchSubmit","userInput","SearchInput","pageChanged","page","newPage","pageTop","pageBottom","pageStart","pageEnd","toggleState","numOfPages","Math","ceil","sortedResults","sort","searhResults","renderComponents","renderToolBar","SearchBar_SearchBar","renderPageDetails","renderResultPages","pageOfResults","slice","resultUrl","PageDetails_PageDetails","ToolBar_ToolBar","numPages","resultArray","i","push","ResultPages_ResultPages","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e26dee11.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PageDetails.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class PageDetails extends React.Component {\r\n\r\n    renderPageDetail = () => {\r\n        const url = this.props.url;\r\n        const description = this.props.description;\r\n        const link = this.props.link;\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    <a href={link}>{url}</a>\r\n                    <br/>\r\n                    <br/>        \r\n                    <p>{description}</p> \r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return this.renderPageDetail();\r\n    }\r\n}","import React from 'react';\r\nimport \"./SearchBar.css\";\r\nimport { Form, Input} from 'semantic-ui-react';\r\nimport axios from \"axios\";\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        input:\"\",\r\n        inputName:\"Submit\",\r\n        labelName:\"SearchBarLabel\",\r\n        results: []\r\n    }\r\n\r\n    onChange = async (e, {name, value}) => {\r\n        const autocorrect = JSON.stringify({autoCorrect: value})\r\n        await axios.post(\"https://cyberminerkwic.herokuapp.com/autocorrect\", autocorrect, \r\n            { headers: {\r\n                'Content-Type': 'application/json'\r\n            }}\r\n        )\r\n            .then(res => {\r\n                const autoCorrect = res.data.autoCorrect;\r\n\r\n                this.setState({[name]:value, results:autoCorrect});\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if(this.state.input.length) {\r\n            this.setState({\r\n                inputName:\"Submitted\",\r\n            labelName:\"SearchedBarLabel\"});\r\n            this.props.onSubmit(this.state.input);\r\n        }\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (\r\n            <div className=\"Form\">\r\n                <div className=\"ui container\">\r\n                        <Form className={this.state.inputName} onSubmit={this.onSubmit}>\r\n                            <Form.Field>\r\n                                <label className={this.state.labelName}>CyberMiner</label>\r\n                                <Input\r\n                                    list=\"autocorrect\"\r\n                                    type=\"Input\"\r\n                                    name=\"input\"\r\n                                    placeholder=\"Search...\"\r\n                                    value={this.state.input}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    <datalist id=\"autocorrect\">\r\n                                        {this.state.results.map(result => {\r\n                                            return (\r\n                                                <option value={result}/ >\r\n                                            );\r\n                                        }\r\n                                        )}\r\n                                    </datalist>\r\n                            \r\n                                                \r\n                            </Form.Field>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"SearchBar\">\r\n            {this.renderSearchBar()}\r\n        </div>);\r\n    }\r\n}","/****************************\r\n *                          *\r\n *       Sort Content       *\r\n *                          *\r\n ****************************/\r\nexport class Sorts {\r\n    sort(items, sortType) {\r\n        console.log(items, sortType);\r\n        if(sortType === \"Alphabetic Ascending\")\r\n            return this.lexicographicQuickSort(items, 0, items.length - 1);\r\n        \r\n        if(sortType === \"Most Visits\")\r\n            return this.visitQuickSort(items, 0, items.length - 1);\r\n\r\n        if(sortType === \"By Pament\")\r\n            return this.paymentQuickSort(items, 0, items.length - 1);\r\n\r\n    }\r\n\r\n    lexicographicQuickSort(sortArray, low, high) {\r\n        console.log(\"hello\");\r\n        // while low and high are not equal\r\n        if(low < high) {\r\n            // puts greater values to right of pivot (high)\r\n            // puts lesser values on right and returns pivots \r\n            // new position\r\n            let pivot = this._partion(sortArray, low, high);\r\n\r\n            // sort each side of the pivot\r\n            this.lexicographicQuickSort(sortArray, low, pivot - 1);\r\n            this.lexicographicQuickSort(sortArray, pivot + 1, high);\r\n        }\r\n        \r\n        return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    _partion(sortArray, low, high) {\r\n\r\n        let pivot = sortArray[high].url;\r\n        let index = low - 1;\r\n\r\n        /* while sortArray[j] is <= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n        for(let j = low; j < high; j++) {\r\n            \r\n            if(sortArray[j].url <= pivot) {\r\n                index++;\r\n                this._swap(sortArray, index, j);\r\n            }\r\n        }\r\n\r\n        // place pivot in the right spot\r\n        index++;\r\n        this._swap(sortArray, index, high);\r\n        return index;\r\n    }\r\n\r\n    visitQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.visitPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.visitQuickSort(sortArray, low, pivot - 1);\r\n        this.visitQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    visitPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].visits;\r\n    console.log(\"pivot:  \", pivot);\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].visits >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    paymentQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.paymentPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.paymentQuickSort(sortArray, low, pivot - 1);\r\n        this.paymentQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    paymentPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].payment;\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].payment >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    // swap elements in an array\r\n    _swap(sortArray, element1, element2) {\r\n        let temp = sortArray[element1];\r\n        sortArray[element1] = sortArray[element2];\r\n        sortArray[element2] = temp;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Dropdown, Label } from \"semantic-ui-react\";\r\nexport class DropDown extends React.Component {\r\n    onChange = (e, dropDown) => {\r\n        this.props.onChange(dropDown.value);\r\n    }\r\n\r\n    renderDropDown = () => {\r\n        const items = this.props.items;\r\n        \r\n        const itemOptions = items.map(item => {\r\n            return(\r\n                {\r\n                    key: item,\r\n                    text: item.toString(),\r\n                    value: item\r\n                }\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"drop\">\r\n                <Label size='large'>\r\n                    {this.props.dropDownLabel}\r\n                </Label>\r\n                <Dropdown\r\n                    placeholder={this.props.placeHolder}\r\n                    selection\r\n                    options={itemOptions}\r\n                    onChange={this.onChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            this.renderDropDown()\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Toggle extends React.Component {\r\n    state = {\r\n        active:false\r\n    };\r\n\r\n    onClick = async () => {\r\n        await this.setState(prevState => ({active: !prevState.active}));\r\n        this.props.onClick(this.state.active);\r\n    }\r\n\r\n    render = () => {\r\n        const {active} = this.state;\r\n\r\n        return (\r\n            <Button toggle active={active} onClick={this.onClick}>\r\n                ToggleWWW\r\n            </Button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { Toggle } from \"./Toggle\";\r\n\r\nexport class ToolBar extends React.Component {\r\n    onClick = active => {\r\n        this.props.onClick(active);\r\n    }\r\n\r\n    renderDropDowns = () => {\r\n        const dropDowns = this.props.dropDowns;\r\n        \r\n        return dropDowns.map(dropDown => {\r\n            return (  <DropDown \r\n                placeHolder={dropDown.placeHolder}\r\n                items = {dropDown.items}\r\n                dropDownLabel = {dropDown.dropDownLabel}/>\r\n            )\r\n        });\r\n    }\r\n\r\n    sortChange = (sortOrder) => {\r\n        this.props.sortChange(sortOrder);\r\n    }\r\n\r\n    resultsPerPageChange = (resultsPerPage) => {\r\n        this.props.resultsPerPageChange(resultsPerPage);\r\n    }\r\n\r\n    render = () => {\r\n        const sortBar = this.props.sortBar;\r\n        const resultsPerPage = this.props.resultsPerPage;\r\n        \r\n        return (\r\n            <div className=\"inverted ui menu\">\r\n                <Toggle onClick={this.onClick}/>\r\n                <DropDown \r\n                    placeHolder={sortBar.placeHolder}\r\n                    items = {sortBar.items}\r\n                    dropDownLabel = {sortBar.dropDownLabel}\r\n                    onChange={this.sortChange}/>\r\n                <DropDown \r\n                    placeHolder={resultsPerPage.placeHolder.toString()}\r\n                    items = {resultsPerPage.items}\r\n                    dropDownLabel = {resultsPerPage.dropDownLabel}\r\n                    onChange={this.resultsPerPageChange}\r\n                    />\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./ResultPages.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class ResultPages extends React.Component {\r\n    state = {\r\n        currentPage: 1,\r\n        buttonName: \"button\",\r\n        activeButton: \"\"\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({activeButton: e.target.name});\r\n        this.props.onClick(parseInt(e.target.value));\r\n    }\r\n\r\n    renderResults = () => {\r\n        return (\r\n            this.props.results.map((result, index) => {\r\n                const res = result + 1;\r\n                const activeName = this.state.activeButton;\r\n                const name = \"button\" + index;\r\n                const className = name === activeName ? \"activeButton\" : \"button\";\r\n\r\n                return (\r\n                    <button\r\n                        className={className}\r\n                        name={name}   \r\n                        value={res} key={result}\r\n                        onClick={this.onClick}\r\n                        style={{fontSize: \"1.5em\"}}>\r\n                            {res}\r\n                    </button>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    { this.renderResults() }\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './HomePage.css';\r\nimport { PageDetails } from \"../components/PageDetails\";\r\nimport { SearchBar } from \"../components/SearchBar\";\r\nimport { Sorts } from \"../components/Sorts\";\r\nimport { ToolBar } from \"../components/ToolBar\";\r\nimport { ResultPages } from \"../components/ResultPages\";\r\nimport axios from \"axios\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  state = {\r\n    items: [],\r\n    resultsPerPg: 10,\r\n    currentPageStart: 0,\r\n    currentPageEnd: 0,\r\n    currentPage: 1,\r\n    numOfPage: 0,\r\n    SearchBarName: \"Search\",\r\n    searchInput: \"\",\r\n    toggle: false,\r\n    www: \"\",\r\n    searchResults: [],\r\n    searched: false\r\n  }\r\n\r\n  sortBar = {\r\n    placeHolder: \"Alphabetic Ascending\",\r\n    items: [\r\n      \"Alphabetic Ascending\",\r\n      \"Most Visits\",\r\n      \"By Payment\"\r\n    ],\r\n    dropDownLabel: \"Results Order:  \"\r\n  }\r\n\r\n  resultsPerPage = {\r\n    placeHolder: 10,\r\n    items: [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n      11, 12, 13, 14, 15, 16, 17, 18, 19, 110,\r\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 20,\r\n      31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50\r\n    ],\r\n    dropDownLabel: \"Results Per Page:  \"\r\n  }\r\n\r\n/****************************\r\n *                          *\r\n *   App rendering Content  *\r\n *                          *\r\n ****************************/\r\n  searchSubmit = async (input) => {   \r\n    const userInput = JSON.stringify( \r\n      {\r\n        input: input\r\n      }\r\n    )\r\n\r\n    await axios.post('https://cyberminerkwic.herokuapp.com/cyberminer', userInput, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n    })\r\n      .then((res) => {\r\n          console.log(res);\r\n          const searchResults = res.data.searchResults;\r\n        \r\n         /* searchResults.forEach(result => {\r\n            axios.get(\"https://www.adsfadfa.com\",\r\n              {\r\n                headers: {\r\n                  'Access-Control-Allow-Origin': '*'\r\n                }\r\n              }\r\n            )\r\n          })\r\n            .catch(error => {\r\n              console.log(error);\r\n            })*/\r\n\r\n          this.setState({\r\n            SearchInput:input,\r\n            SearchBarName:\"Search-Searched\",\r\n            toggle: true,\r\n            currentPage: 1,\r\n            searched: true,\r\n            searchResults: searchResults\r\n          });\r\n\r\n          console.log(searchResults);\r\n          this.resultsPerPageChange(10);  \r\n      })\r\n      .catch(error => {\r\n          console.log(JSON.stringify(error))\r\n      });\r\n  }\r\n\r\n  pageChanged = page => {\r\n    const resultsPerPage = this.state.resultsPerPg;\r\n    const newPage = page;\r\n    const pageTop = (newPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      currentPage: newPage\r\n    });\r\n  }\r\n\r\n  toggle = (toggleState) => {\r\n    toggleState ?\r\n     this.setState({www:\"www.\"}) : this.setState({www:\"\"});\r\n  }\r\n\r\n  resultsPerPageChange = (resultsPerPage) => {\r\n    const size = this.state.searchResults.length;\r\n    const numOfPages = Math.ceil(size / resultsPerPage);\r\n    const currentPage = numOfPages < this.state.currentPage ?\r\n      numOfPages : this.state.currentPage;\r\n    const pageTop = (currentPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      numOfPage:numOfPages,\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      resultsPerPg: resultsPerPage\r\n    });\r\n  }\r\n\r\n  sortChange = (sortType) => {\r\n    console.log(sortType);\r\n    const searchResults = this.state.searchResults;\r\n    const sortedResults = new Sorts().sort(searchResults, sortType);\r\n    console.log(sortedResults);\r\n    this.setState({\r\n      searhResults: sortedResults\r\n    })\r\n  }\r\n  \r\n  renderComponents = () => {\r\n    return(\r\n      <div className=\"App\">\r\n        {this.renderToolBar()}\r\n        <div className={this.state.SearchBarName}>\r\n          <SearchBar onSubmit={this.searchSubmit}/>\r\n        </div>\r\n        <div className=\"WebPageDetails\">\r\n          {this.renderPageDetails()}\r\n        </div>\r\n        <br/>\r\n        {this.renderResultPages()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderPageDetails = () => {\r\n    const pageTop = this.state.pageStart;\r\n    const pageBottom = this.state.pageEnd;\r\n    const searchResults = this.state.searchResults;\r\n    console.log(searchResults);\r\n    const pageOfResults = searchResults.slice(pageTop, pageBottom);\r\n    console.log(\"pageResults: \", pageOfResults);\r\n    if(this.state.searched)\r\n      return (\r\n        pageOfResults.map((result, index) => {\r\n          const resultUrl = this.state.www + result.url;\r\n\r\n          return (\r\n            <PageDetails\r\n              key={index}\r\n              url={resultUrl}\r\n              link={result.link}\r\n              description={result.description} />\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  renderToolBar = () => {\r\n    if(this.state.toggle) {\r\n      return ( \r\n         <ToolBar\r\n          sortBar={this.sortBar}\r\n          resultsPerPage={this.resultsPerPage} \r\n          onClick={this.toggle}\r\n          sortChange={this.sortChange}\r\n          resultsPerPageChange={this.resultsPerPageChange}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderResultPages = () => {\r\n    if(this.state.toggle) {\r\n      const numPages = this.state.numOfPage;\r\n      let resultArray = [];\r\n\r\n      for(let i = 0; i < numPages; i++) \r\n        resultArray.push(i);\r\n\r\n      return (\r\n        <ResultPages onClick={this.pageChanged} results={resultArray}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return this.renderComponents();\r\n  }\r\n}","\r\n\r\nimport React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n              <BrowserRouter basename=\"/cyberminer\">\r\n                  <Route path=\"/\" exact component={HomePage}/>\r\n              </BrowserRouter>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}