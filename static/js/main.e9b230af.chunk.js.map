{"version":3,"sources":["components/PageDetails.js","components/SearchBar.js","components/Sorts.js","components/DropDown.js","components/Toggle.js","components/ToolBar.js","components/ResultPages.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["PageDetails","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onClick","renderPageDetail","url","props","description","link","react_default","a","createElement","className","Segment","href","render","inherits","React","Component","SearchBar","state","input","inputName","labelName","currentIndex","wordIndex","lastIndex","list","key","text","e","console","log","preventDefault","target","value","onChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","subString","wrap","_context","prev","next","keyCode","pop","substring","JSON","stringify","autoCorrect","axios","post","headers","Content-Type","Access-Control-Allow-Origin","then","res","push","replace","data","catch","error","setState","stop","_x","onSubmit","renderSearchBar","Form","Field","Dropdown","name","placeholder","search","fluid","options","onKeyUp","Sorts","createClass","items","sortType","lexicographicQuickSort","visitQuickSort","paymentQuickSort","sortArray","low","high","pivot","_partion","index","j","_swap","visitPartion","visits","paymentPartion","payment","element1","element2","temp","DropDown","dropDown","renderDropDown","itemOptions","map","item","toString","Label","size","dropDownLabel","placeHolder","selection","Toggle","active","prevState","Button","toggle","ToolBar","renderDropDowns","dropDowns","DropDown_DropDown","sortChange","sortOrder","resultsPerPageChange","resultsPerPage","sortBar","Toggle_Toggle","ResultPages","currentPage","buttonName","activeButton","parseInt","renderResults","results","result","style","fontSize","HomePage","resultsPerPg","currentPageStart","currentPageEnd","numOfPage","SearchBarName","searchInput","www","searchResults","searched","searchSubmit","userInput","SearchInput","pageChanged","page","newPage","pageTop","pageBottom","pageStart","pageEnd","toggleState","numOfPages","Math","ceil","sortedResults","sort","searhResults","renderComponents","renderToolBar","SearchBar_SearchBar","renderPageDetails","renderResultPages","pageOfResults","slice","resultUrl","PageDetails_PageDetails","ToolBar_ToolBar","numPages","resultArray","i","ResultPages_ResultPages","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9b230af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PageDetails.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class PageDetails extends React.Component {\r\n\r\n    onClick = () => {\r\n    }\r\n\r\n    renderPageDetail = () => {\r\n        const url = this.props.url;\r\n        const description = this.props.description;\r\n        const link = this.props.link;\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    <a href={link} onClick={this.onClick}>{url}</a>\r\n                    <br/>\r\n                    <br/>        \r\n                    <p>{description}</p> \r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return this.renderPageDetail();\r\n    }\r\n}","import React from 'react';\r\nimport \"./SearchBar.css\";\r\nimport { Form, Input, Dropdown} from 'semantic-ui-react';\r\nimport axios from \"axios\";\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        input:\"\",\r\n        inputName:\"Submit\",\r\n        labelName:\"SearchBarLabel\",\r\n        currentIndex: 1,\r\n        wordIndex: 0,\r\n        lastIndex: [],\r\n        list:[\r\n            {key:0, text: \"a\"},\r\n            {key:1, text: \"s\"},\r\n            {key:2, text: \"d\"},\r\n            {key:3, text: \"f\"},\r\n            {key:4, text: \"g\"},\r\n        ]\r\n    }\r\n\r\n    onClick= (e)=> {\r\n        console.log(\"hello\");\r\n        e.preventDefault();\r\n       console.log(e.target.value); \r\n    }\r\n\r\n    onChange = async (e) => {\r\n        let currentIndex = this.state.currentIndex;\r\n        let wordIndex = this.state.wordIndex;\r\n        const value = e.target.value;\r\n        let subString = [];\r\n        const length = value.length;\r\n        let lastIndex = this.state.lastIndex;\r\n\r\n        if(e.keyCode === 8) {\r\n            currentIndex -= 2;\r\n            if(length - 1 <= wordIndex)\r\n                wordIndex = lastIndex.pop();\r\n\r\n        } else if(e.keyCode != 32) {\r\n\r\n            subString = value.substring(wordIndex, currentIndex - 1);\r\n\r\n            const input = JSON.stringify({autoCorrect: subString});\r\n\r\n           await axios.post(\"https://cyberminerkwic.herokuapp.com/autocorrect\", input, \r\n            {headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }})\r\n                .then((res) => {\r\n                    if(res) {\r\n                        lastIndex.push(wordIndex);\r\n                        wordIndex = length;\r\n                        console.log(subString);\r\n                        value.replace(subString, res.data.autoCorrect);\r\n                        console.log(\"value:  \", value);\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            lastIndex.push(wordIndex);\r\n            wordIndex = length;\r\n        }\r\n\r\n        console.log(\"value currentI\", value, currentIndex);  \r\n        console.log(wordIndex);\r\n        console.log(lastIndex);\r\n\r\n        this.setState({\r\n            input:value,\r\n            currentIndex: currentIndex  + 1,\r\n            wordIndex: wordIndex,\r\n            lastIndex: lastIndex\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        console.log(this.state.input);\r\n        if(this.state.input.length) {\r\n            this.setState({\r\n                inputName:\"Submitted\",\r\n            labelName:\"SearchedBarLabel\"});\r\n            this.props.onSubmit(this.state.input);\r\n        }\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (\r\n            <div className=\"Form\">\r\n                <div className=\"ui container\">\r\n                        <Form className={this.state.inputName} onSubmit={this.onSubmit}>\r\n                            <Form.Field>\r\n                                <label className={this.state.labelName}>CyberMiner</label>\r\n                                <div className=\"ui container\">\r\n                                    <Dropdown\r\n                                        name=\"input\"\r\n                                        placeholder=\"Search\"\r\n                                        search\r\n                                        fluid\r\n                                        options={this.state.list}\r\n                                        value={this.state.value}\r\n                                        //onSearchChange={this.onChange}\r\n                                        //onSubmit={this.onSubmit}\r\n                                        onKeyUp={this.onChange}\r\n                                    />\r\n                                </div>\r\n                            </Form.Field>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"SearchBar\">\r\n            {this.renderSearchBar()}\r\n        </div>);\r\n    }\r\n}","/****************************\r\n *                          *\r\n *       Sort Content       *\r\n *                          *\r\n ****************************/\r\nexport class Sorts {\r\n    sort(items, sortType) {\r\n        console.log(items, sortType);\r\n        if(sortType === \"Alphabetic Ascending\")\r\n            return this.lexicographicQuickSort(items, 0, items.length - 1);\r\n        \r\n        if(sortType === \"Most Visits\")\r\n            return this.visitQuickSort(items, 0, items.length - 1);\r\n\r\n        if(sortType === \"By Pament\")\r\n            return this.paymentQuickSort(items, 0, items.length - 1);\r\n\r\n    }\r\n\r\n    lexicographicQuickSort(sortArray, low, high) {\r\n        console.log(\"hello\");\r\n        // while low and high are not equal\r\n        if(low < high) {\r\n            // puts greater values to right of pivot (high)\r\n            // puts lesser values on right and returns pivots \r\n            // new position\r\n            let pivot = this._partion(sortArray, low, high);\r\n\r\n            // sort each side of the pivot\r\n            this.lexicographicQuickSort(sortArray, low, pivot - 1);\r\n            this.lexicographicQuickSort(sortArray, pivot + 1, high);\r\n        }\r\n        \r\n        return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    _partion(sortArray, low, high) {\r\n\r\n        let pivot = sortArray[high].url;\r\n        let index = low - 1;\r\n\r\n        /* while sortArray[j] is <= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n        for(let j = low; j < high; j++) {\r\n            \r\n            if(sortArray[j].url <= pivot) {\r\n                index++;\r\n                this._swap(sortArray, index, j);\r\n            }\r\n        }\r\n\r\n        // place pivot in the right spot\r\n        index++;\r\n        this._swap(sortArray, index, high);\r\n        return index;\r\n    }\r\n\r\n    visitQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.visitPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.visitQuickSort(sortArray, low, pivot - 1);\r\n        this.visitQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    visitPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].visits;\r\n    console.log(\"pivot:  \", pivot);\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].visits >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    paymentQuickSort(sortArray, low, high) {\r\n    // while low and high are not equal\r\n    if(low < high) {\r\n        // puts greater values to right of pivot (high)\r\n        // puts lesser values on right and returns pivots \r\n        // new position\r\n        let pivot = this.paymentPartion(sortArray, low, high);\r\n\r\n        // sort each side of the pivot\r\n        this.paymentQuickSort(sortArray, low, pivot - 1);\r\n        this.paymentQuickSort(sortArray, pivot + 1, high);\r\n    }\r\n    \r\n    return sortArray;\r\n    }\r\n\r\n    // high acts as the pivot in this sort\r\n    paymentPartion(sortArray, low, high) {\r\n\r\n    let pivot = sortArray[high].payment;\r\n    let index = low - 1;\r\n\r\n    /* while sortArray[j] is >= pivot, we need\r\n        to move the bigger numbers closer to\r\n        the pivot and smaller numbers farther \r\n        from the pivot */\r\n    for(let j = low; j < high; j++) {\r\n        \r\n        if(sortArray[j].payment >= pivot) {\r\n            index++;\r\n            this._swap(sortArray, index, j);\r\n        }\r\n    }\r\n\r\n    // place pivot in the right spot\r\n    index++;\r\n    this._swap(sortArray, index, high);\r\n    return index;\r\n    }\r\n\r\n    // swap elements in an array\r\n    _swap(sortArray, element1, element2) {\r\n        let temp = sortArray[element1];\r\n        sortArray[element1] = sortArray[element2];\r\n        sortArray[element2] = temp;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Dropdown, Label } from \"semantic-ui-react\";\r\n\r\nexport class DropDown extends React.Component {\r\n    onChange = (e, dropDown) => {\r\n        this.props.onChange(dropDown.value);\r\n    }\r\n\r\n    renderDropDown = () => {\r\n        const items = this.props.items;\r\n        \r\n        const itemOptions = items.map(item => {\r\n            return(\r\n                {\r\n                    key: item,\r\n                    text: item.toString(),\r\n                    value: item\r\n                }\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"drop\">\r\n                <Label size='large'>\r\n                    {this.props.dropDownLabel}\r\n                </Label>\r\n                <Dropdown\r\n                    placeholder={this.props.placeHolder}\r\n                    selection\r\n                    options={itemOptions}\r\n                    onChange={this.onChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            this.renderDropDown()\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Toggle extends React.Component {\r\n    state = {\r\n        active:false\r\n    };\r\n\r\n    onClick = async () => {\r\n        await this.setState(prevState => ({active: !prevState.active}));\r\n        this.props.onClick(this.state.active);\r\n    }\r\n\r\n    render = () => {\r\n        const {active} = this.state;\r\n\r\n        return (\r\n            <Button toggle active={active} onClick={this.onClick}>\r\n                ToggleWWW\r\n            </Button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { Toggle } from \"./Toggle\";\r\n\r\nexport class ToolBar extends React.Component {\r\n    onClick = active => {\r\n        this.props.onClick(active);\r\n    }\r\n\r\n    renderDropDowns = () => {\r\n        const dropDowns = this.props.dropDowns;\r\n        \r\n        return dropDowns.map(dropDown => {\r\n            return (  <DropDown \r\n                placeHolder={dropDown.placeHolder}\r\n                items = {dropDown.items}\r\n                dropDownLabel = {dropDown.dropDownLabel}/>\r\n            )\r\n        });\r\n    }\r\n\r\n    sortChange = (sortOrder) => {\r\n        this.props.sortChange(sortOrder);\r\n    }\r\n\r\n    resultsPerPageChange = (resultsPerPage) => {\r\n        this.props.resultsPerPageChange(resultsPerPage);\r\n    }\r\n\r\n    render = () => {\r\n        const sortBar = this.props.sortBar;\r\n        const resultsPerPage = this.props.resultsPerPage;\r\n        \r\n        return (\r\n            <div className=\"inverted ui menu\">\r\n                <Toggle onClick={this.onClick}/>\r\n                <DropDown \r\n                    placeHolder={sortBar.placeHolder}\r\n                    items = {sortBar.items}\r\n                    dropDownLabel = {sortBar.dropDownLabel}\r\n                    onChange={this.sortChange}/>\r\n                <DropDown \r\n                    placeHolder={resultsPerPage.placeHolder.toString()}\r\n                    items = {resultsPerPage.items}\r\n                    dropDownLabel = {resultsPerPage.dropDownLabel}\r\n                    onChange={this.resultsPerPageChange}\r\n                    />\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./ResultPages.css\"\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\nexport class ResultPages extends React.Component {\r\n    state = {\r\n        currentPage: 1,\r\n        buttonName: \"button\",\r\n        activeButton: \"\"\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({activeButton: e.target.name});\r\n        this.props.onClick(parseInt(e.target.value));\r\n    }\r\n\r\n    renderResults = () => {\r\n        return (\r\n            this.props.results.map((result, index) => {\r\n                const res = result + 1;\r\n                const activeName = this.state.activeButton;\r\n                const name = \"button\" + index;\r\n                const className = name === activeName ? \"activeButton\" : \"button\";\r\n\r\n                return (\r\n                    <button\r\n                        className={className}\r\n                        name={name}   \r\n                        value={res} key={result}\r\n                        onClick={this.onClick}\r\n                        style={{fontSize: \"1.5em\"}}>\r\n                            {res}\r\n                    </button>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Segment>\r\n                    { this.renderResults() }\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './HomePage.css';\r\nimport { PageDetails } from \"../components/PageDetails\";\r\nimport { SearchBar } from \"../components/SearchBar\";\r\nimport { Sorts } from \"../components/Sorts\";\r\nimport { ToolBar } from \"../components/ToolBar\";\r\nimport { ResultPages } from \"../components/ResultPages\";\r\nimport axios from \"axios\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  state = {\r\n    items: [],\r\n    resultsPerPg: 10,\r\n    currentPageStart: 0,\r\n    currentPageEnd: 0,\r\n    currentPage: 1,\r\n    numOfPage: 0,\r\n    SearchBarName: \"Search\",\r\n    searchInput: \"\",\r\n    toggle: false,\r\n    www: \"\",\r\n    searchResults: [],\r\n    searched: false\r\n  }\r\n\r\n  sortBar = {\r\n    placeHolder: \"Alphabetic Ascending\",\r\n    items: [\r\n      \"Alphabetic Ascending\",\r\n      \"Most Visits\",\r\n      \"By Payment\"\r\n    ],\r\n    dropDownLabel: \"Results Order:  \"\r\n  }\r\n\r\n  resultsPerPage = {\r\n    placeHolder: 10,\r\n    items: [\r\n      1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n      11, 12, 13, 14, 15, 16, 17, 18, 19, 110,\r\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 20,\r\n      31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50\r\n    ],\r\n    dropDownLabel: \"Results Per Page:  \"\r\n  }\r\n\r\n/****************************\r\n *                          *\r\n *   App rendering Content  *\r\n *                          *\r\n ****************************/\r\n  searchSubmit = async (input) => {   \r\n    const userInput = JSON.stringify( \r\n      {\r\n        input: input\r\n      }\r\n    )\r\n    console.log(input);\r\n    await axios.post('https://cyberminerkwic.herokuapp.com/cyberminer', userInput, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n    })\r\n      .then((res) => {\r\n          console.log(res);\r\n          const searchResults = res.data.searchResults;\r\n        \r\n         /* searchResults.forEach(result => {\r\n            axios.get(\"https://www.adsfadfa.com\",\r\n              {\r\n                headers: {\r\n                  'Access-Control-Allow-Origin': '*'\r\n                }\r\n              }\r\n            )\r\n          })\r\n            .catch(error => {\r\n              console.log(error);\r\n            })*/\r\n\r\n          this.setState({\r\n            SearchInput:input,\r\n            SearchBarName:\"Search-Searched\",\r\n            toggle: true,\r\n            currentPage: 1,\r\n            searched: true,\r\n            searchResults: searchResults\r\n          });\r\n\r\n          console.log(searchResults);\r\n          this.resultsPerPageChange(10);  \r\n      })\r\n      .catch(error => {\r\n          console.log(JSON.stringify(error))\r\n      });\r\n  }\r\n\r\n  pageChanged = page => {\r\n    const resultsPerPage = this.state.resultsPerPg;\r\n    const newPage = page;\r\n    const pageTop = (newPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      currentPage: newPage\r\n    });\r\n  }\r\n\r\n  toggle = (toggleState) => {\r\n    toggleState ?\r\n     this.setState({www:\"www.\"}) : this.setState({www:\"\"});\r\n  }\r\n\r\n  resultsPerPageChange = (resultsPerPage) => {\r\n    const size = this.state.searchResults.length;\r\n    const numOfPages = Math.ceil(size / resultsPerPage);\r\n    const currentPage = numOfPages < this.state.currentPage ?\r\n      numOfPages : this.state.currentPage;\r\n    const pageTop = (currentPage - 1) * resultsPerPage;\r\n    const pageBottom = pageTop + resultsPerPage;\r\n    \r\n    this.setState({\r\n      numOfPage:numOfPages,\r\n      pageStart: pageTop,\r\n      pageEnd: pageBottom,\r\n      resultsPerPg: resultsPerPage\r\n    });\r\n  }\r\n\r\n  sortChange = (sortType) => {\r\n    console.log(sortType);\r\n    const searchResults = this.state.searchResults;\r\n    const sortedResults = new Sorts().sort(searchResults, sortType);\r\n    console.log(sortedResults);\r\n    this.setState({\r\n      searhResults: sortedResults\r\n    })\r\n  }\r\n  \r\n  renderComponents = () => {\r\n    return(\r\n      <div className=\"App\">\r\n        {this.renderToolBar()}\r\n        <div className={this.state.SearchBarName}>\r\n          <SearchBar onSubmit={this.searchSubmit}/>\r\n        </div>\r\n        <div className=\"WebPageDetails\">\r\n          {this.renderPageDetails()}\r\n        </div>\r\n        <br/>\r\n        {this.renderResultPages()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderPageDetails = () => {\r\n    const pageTop = this.state.pageStart;\r\n    const pageBottom = this.state.pageEnd;\r\n    const searchResults = this.state.searchResults;\r\n    console.log(searchResults);\r\n    const pageOfResults = searchResults.slice(pageTop, pageBottom);\r\n    console.log(\"pageResults: \", pageOfResults);\r\n    if(this.state.searched)\r\n      return (\r\n        pageOfResults.map((result, index) => {\r\n          const resultUrl = this.state.www + result.url;\r\n\r\n          return (\r\n            <PageDetails\r\n              key={index}\r\n              url={resultUrl}\r\n              link={result.link}\r\n              description={result.description} />\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  renderToolBar = () => {\r\n    if(this.state.toggle) {\r\n      return ( \r\n         <ToolBar\r\n          sortBar={this.sortBar}\r\n          resultsPerPage={this.resultsPerPage} \r\n          onClick={this.toggle}\r\n          sortChange={this.sortChange}\r\n          resultsPerPageChange={this.resultsPerPageChange}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderResultPages = () => {\r\n    if(this.state.toggle) {\r\n      const numPages = this.state.numOfPage;\r\n      let resultArray = [];\r\n\r\n      for(let i = 0; i < numPages; i++) \r\n        resultArray.push(i);\r\n\r\n      return (\r\n        <ResultPages onClick={this.pageChanged} results={resultArray}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return this.renderComponents();\r\n  }\r\n}","\r\n\r\nimport React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n              <BrowserRouter basename=\"/cyberminer\">\r\n                  <Route path=\"/\" exact component={HomePage}/>\r\n              </BrowserRouter>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}